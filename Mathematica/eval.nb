(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1076869,      22248]
NotebookOptionsPosition[   1071953,      22158]
NotebookOutlinePosition[   1072439,      22177]
CellTagsIndexPosition[   1072396,      22174]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DiracDec Evaluation", "Title",
 CellChangeTimes->{{3.937550411572126*^9, 
  3.937550422797523*^9}},ExpressionUUID->"51c1fddf-362a-4bef-ad37-\
aebbaceb35e2"],

Cell["\<\
Execute the cells using \[OpenCurlyDoubleQuote]shift+enter\
\[CloseCurlyDoubleQuote].\[LineSeparator]First execute the following \
initialization cells, which loads the DiracDec implementation and declares \
the defined symbols.\
\>", "Text",
 CellChangeTimes->{{3.937550426346732*^9, 
  3.937550515315797*^9}},ExpressionUUID->"b969a5b0-bfcb-4797-9168-\
a9180c110485"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DiracDec\>\""}], 
      "}"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Get", "[", "\"\<DiracAll`\>\"", "]"}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"a5e2e0ba-be8e-4f23-bcf2-a6f36d88fa79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "DNTr", ";", " ", "SWAP", ";", " ", "DNPTr1", ";", " ", "DNPTr2", ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
  "TPK", ";", " ", "TPB", ";", " ", "TPO", ";", " ", "CONJO", ";", " ", 
   "diagmx", ";", " ", "cplmt", ";", " ", "formlf", ";"}], "\n"}], "\n", 
 RowBox[{"superop", ";", " ", "so2choi", ";", " ", "choi2so", ";", " ", 
  "krausso", ";", " ", "dualso", ";", " ", "elemso", ";", " ", "dualqm", 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "idso", ";", " ", "abortso", ";", " ", "formso", ";", " ", "unitaryso", ";",
    " ", "addso", ";", " ", "sumso", ";", " ", "oppso", ";", " ", "scaleso", 
   ";", " ", "compso", ";", " ", "compsor", ";", " ", "initialso", ";", " ", 
   "ifso", ";"}], "\n"}], "\n", 
 RowBox[{"isHermitian", ";", " ", "isNormal", ";", " ", "isProjection", ";", 
  " ", "isUnitary", ";", " ", "isIsometry", ";", " ", "isBiisometry", ";", 
  " ", "isQMeas", ";"}], "\n", 
 RowBox[{
  RowBox[{
  "DNHermitian", ";", " ", "DNNormal", ";", " ", "DNProjection", ";", " ", 
   "DNUnitary", ";", " ", "DNIsometry", ";", " ", "DNBiisometry", ";", " ", 
   "DNQMeas", ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Program", " ", "Logic"}], " ", "*)"}]}], "\n", 
 RowBox[{"wp", ";", " ", "DenoSem", ";"}], "\n", 
 RowBox[{
  RowBox[{
  "e", ";", " ", "iset", ";", " ", "skip", ";", " ", "if", ";", " ", "while", 
   ";", " ", "seq", ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Paper", ":", " ", 
    RowBox[{
    "Optimal", " ", "implementation", " ", "of", " ", "quantum", " ", "gates",
      " ", "with", " ", "two", " ", "controls"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
  "XGate", ";", " ", "Id", ";", " ", "SW", ";", " ", "Diag", ";", " ", "Ct", 
   ";", " ", "CtCt", ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "the", " ", "Context", " ", "to", " ", "avoid", " ", "bind", 
    " ", "variable", " ", "name", " ", "conflicts"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<Definition`\>\"", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T", ",", " ", "T"}], "]"}]}], " ", ";", " ", "SType"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNTr", "[", 
     RowBox[{"M_", ",", " ", "T_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{"SUMS", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"USET", "[", "T", "]"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{
         TemplateBox[{"i"},
          "Bra"], "\[SmallCircle]", "M", "\[SmallCircle]", 
         TemplateBox[{"i"},
          "Ket"]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{
       RowBox[{"T1", " ", "*", " ", "T2"}], ",", " ", 
       RowBox[{"T3", " ", "*", " ", "T4"}]}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{
      RowBox[{"T2", " ", "*", " ", "T1"}], ",", " ", 
      RowBox[{"T4", " ", "*", " ", "T3"}]}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SWAP", "[", 
     RowBox[{
     "term_", ",", " ", "T1_", ",", " ", "T2_", ",", " ", "T3_", ",", " ", 
      "T4_"}], "]"}], ":=", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "l"}], "}"}], ",",
       "\n", "\t", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"USET", "[", "T2", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"USET", "[", "T3", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"USET", "[", "T4", "]"}]}], "}"}]}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"i", ",", "j"}], "]"}]},
            "Bra"], "\[SmallCircle]", "term", "\[SmallCircle]", 
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"k", ",", "l"}], "]"}]},
            "Ket"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"j", ",", "i"}], "]"}]},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"l", ",", "k"}], "]"}]},
            "Bra"]}], ")"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{
       RowBox[{"T", " ", "*", " ", "T1"}], ",", " ", 
       RowBox[{"T", " ", "*", " ", "T2"}]}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", " ", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNPTr1", "[", 
     RowBox[{"M_", ",", " ", "T_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], 
    ":=", " ", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "}"}], ",", " ", "\n", 
      "\t", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"USET", "[", "T2", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"USET", "[", "T", "]"}]}], "}"}]}], "]"}], ",", " ", "\n",
         "\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"k", ",", " ", "i"}], "]"}]},
            "Bra"], "\[SmallCircle]", "M", "\[SmallCircle]", 
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"k", ",", " ", "j"}], "]"}]},
            "Ket"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], ")"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{
       RowBox[{"T1", " ", "*", " ", "T"}], ",", " ", 
       RowBox[{"T2", " ", "*", " ", "T"}]}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", " ", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNPTr2", "[", 
     RowBox[{"M_", ",", " ", "T_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], 
    ":=", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "}"}], ",", "\n", "\t", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"USET", "[", "T2", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"USET", "[", "T", "]"}]}], "}"}]}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"i", ",", " ", "k"}], "]"}]},
            "Bra"], "\[SmallCircle]", "M", "\[SmallCircle]", 
           TemplateBox[{
             RowBox[{"PAIR", "[", 
               RowBox[{"j", ",", " ", "k"}], "]"}]},
            "Ket"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], ")"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"B", " ", "->", " ", 
     RowBox[{"BType", "[", "T", "]"}]}], " ", ";", " ", 
    RowBox[{"KType", "[", "T", "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TPK", "[", 
     RowBox[{"B_", ",", " ", "T_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{"SUMK", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"USET", "[", "T", "]"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"B", "\[SmallCircle]", 
           TemplateBox[{"i"},
            "Ket"]}], ")"}], 
         TemplateBox[{"i"},
          "Ket"]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"K", " ", "->", " ", 
     RowBox[{"KType", "[", "T", "]"}]}], " ", ";", " ", 
    RowBox[{"BType", "[", "T", "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TPB", "[", 
     RowBox[{"K_", ",", " ", "T_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{"SUMB", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"USET", "[", "T", "]"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Bra"], "\[SmallCircle]", "K"}], ")"}], 
         TemplateBox[{"i"},
          "Bra"]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"O", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T2", ",", "T1"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TPO", "[", 
     RowBox[{"O_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j"}], "}"}], ",", " ", "\n", "\t", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"USET", "[", "T2", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], ")"}], "\[SmallCircle]", "O", "\[SmallCircle]", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], ")"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"O", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CONJO", "[", 
     RowBox[{"O_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"TPO", "[", 
     RowBox[{
      RowBox[{"ADJO", "[", "O", "]"}], ",", "T2", ",", "T1"}], "]"}]}], ";"}],
   "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"K", " ", "->", " ", 
     RowBox[{"KType", "[", "T", "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagmx", "[", 
     RowBox[{"K_", ",", "T_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"USET", "[", "T", "]"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Bra"], "\[SmallCircle]", "K"}], ")"}], 
         RowBox[{
          TemplateBox[{"i"},
           "Ket"], "\[SmallCircle]", 
          TemplateBox[{"i"},
           "Bra"]}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cplmt", "[", 
     RowBox[{"A_", ",", " ", "T_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"ONEO", "[", "T", "]"}], " ", "~", "ADDO", "~", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CPX", "[", 
        RowBox[{"-", "1"}], "]"}], "~", "SCRO", "~", "A"}], ")"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"formlf", "[", 
     RowBox[{"A_", ",", " ", "X_"}], "]"}], ":=", " ", 
    RowBox[{
    "A", " ", "\[SmallCircle]", " ", "X", " ", "\[SmallCircle]", " ", 
     SuperscriptBox["A", "\[Dagger]"]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}], " ", "===", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T2", ",", "T2"}], "]"}]}], " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", "T1"}], "]"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"e", "[", "_", "]"}], " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], " ", "->", " ", 
      RowBox[{"OType", "[", 
       RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"superop", "[", 
     RowBox[{"M_", ",", " ", "e_", ",", " ", "f_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"SUMO", "[", 
        RowBox[{
         RowBox[{"IDX", "[", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "M"}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"e", "[", "i", "]"}], "\[SmallCircle]", "#", 
          "\[SmallCircle]", 
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"f", "[", "i", "]"}], "\[Dagger]"], ")"}]}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", " ", ":", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T2", ",", "T1"}], "]"}]}], " ", ";", " ", 
    RowBox[{"OType", "[", 
     RowBox[{
      RowBox[{"T1", " ", "*", " ", "T2"}], ",", " ", 
      RowBox[{"T1", " ", "*", " ", "T2"}]}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"so2choi", "[", 
     RowBox[{"e_", ",", " ", "T1_"}], "]"}], ":=", "\n", "\t", 
    RowBox[{"Module", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"USET", "[", "T1", "]"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], ")"}], "\[CircleTimes]", 
         RowBox[{"e", "[", 
          RowBox[{
           TemplateBox[{"i"},
            "Ket"], "\[SmallCircle]", 
           TemplateBox[{"j"},
            "Bra"]}], "]"}]}]}], "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"A", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{
       RowBox[{"T1", " ", "*", " ", "T2"}], ",", " ", 
       RowBox[{"T1", " ", "*", " ", "T2"}]}], "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T2", ",", "T1"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"choi2so", "[", 
     RowBox[{"A_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"DNPTr1", "[", 
      RowBox[{
       RowBox[{"A", "~", "MLTO", "~", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"TPO", "[", 
           RowBox[{"#", ",", " ", "T1", ",", " ", "T1"}], "]"}], " ", "~", 
          "TSRO", "~", " ", 
          RowBox[{"ONEO", "[", "T2", "]"}]}], ")"}]}], ",", " ", "T1", ",", 
       " ", "T2", ",", " ", "T2"}], "]"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], " ", "->", " ", 
      RowBox[{"OType", "[", 
       RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"krausso", "[", 
     RowBox[{"M_", ",", " ", "f_"}], "]"}], ":=", 
    RowBox[{"superop", "[", 
     RowBox[{"M", ",", "f", ",", "f"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", " ", ":", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T2", ",", "T1"}], "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dualso", "[", 
     RowBox[{"e_", ",", " ", "T1_", ",", " ", "T2_"}], "]"}], ":=", 
    RowBox[{"choi2so", "[", 
     RowBox[{
      RowBox[{"SWAP", "[", 
       RowBox[{
        RowBox[{"TPO", "[", 
         RowBox[{
          RowBox[{"so2choi", "[", 
           RowBox[{"e", ",", " ", "T1"}], "]"}], ",", " ", 
          RowBox[{"T1", " ", "~", "ProdType", "~", " ", "T2"}], ",", " ", 
          RowBox[{"T1", " ", "~", "ProdType", "~", " ", "T2"}]}], "]"}], ",", 
        " ", "T1", ",", " ", "T2", ",", " ", "T1", ",", " ", "T2"}], "]"}], 
      ",", " ", "T2", ",", " ", "T1"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "_", "]"}], " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"elemso", "[", 
     RowBox[{"f_", ",", " ", "k_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "k", "]"}], "\[SmallCircle]", "#", "\[SmallCircle]", 
       
       SuperscriptBox[
        RowBox[{"f", "[", "k", "]"}], "\[Dagger]"]}], ")"}], "&"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", "[", "_", "]"}], " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", " ", "T2"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", "_", "]"}], " ", "->", " ", 
      RowBox[{"OType", "[", 
       RowBox[{"T1", ",", "T1"}], "]"}]}], " ", ";", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T2", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dualqm", "[", 
     RowBox[{"M_", ",", " ", "f_", ",", " ", "X_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{"SUMO", "[", 
       RowBox[{
        RowBox[{"IDX", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "M"}], "}"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"f", "[", "i", "]"}], "\[Dagger]"], ")"}], 
         "\[SmallCircle]", 
         RowBox[{"X", "[", "i", "]"}], "\[SmallCircle]", 
         RowBox[{"f", "[", "i", "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"idso", "[", "T_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ONEO", "[", "T", "]"}], "\[SmallCircle]", "#", 
        "\[SmallCircle]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ONEO", "[", "T", "]"}], ")"}], "\[Dagger]"]}], ")"}], 
      "&"}]}], ";"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idso", "[", "T_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", "#", ")"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"abortso", "[", 
      RowBox[{"T1_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ZEROO", "[", 
         RowBox[{"T1", ",", " ", "T2"}], "]"}], "\[SmallCircle]", "#", 
        "\[SmallCircle]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ZEROO", "[", 
           RowBox[{"T1", ",", " ", "T2"}], "]"}], ")"}], "\[Dagger]"]}], 
       ")"}], "&"}]}], ";"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"abortso", "[", 
     RowBox[{"T1_", ",", "T2_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"ZEROO", "[", 
       RowBox[{"T1", ",", "T1"}], "]"}], ")"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"f", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"formso", "[", "f_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", "\[SmallCircle]", "#", "\[SmallCircle]", 
       SuperscriptBox["f", "\[Dagger]"]}], ")"}], "&"}]}], ";"}], "\n", "\n", 
  
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"f", " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryso", "[", "f_", "]"}], " ", ":=", " ", 
    RowBox[{"formso", "[", "f", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", " ", 
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"SOType", "[", 
       RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addso", "[", 
     RowBox[{"e_", ",", " ", "f_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", "[", "#", "]"}], " ", "~", "ADDO", "~", " ", 
       RowBox[{"f", "[", "#", "]"}]}], ")"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], " ", ":", " ", 
      RowBox[{"SOType", "[", 
       RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumso", "[", 
     RowBox[{"M_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"SUMO", "[", 
        RowBox[{"i", ",", " ", "M", ",", " ", 
         RowBox[{
          RowBox[{"f", "[", "i", "]"}], "[", "#", "]"}]}], "]"}], "&"}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"e", " ", ":", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oppso", "[", "e_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CPX", "[", 
        RowBox[{"-", "1"}], "]"}], " ", "~", "SCRO", "~", " ", 
       RowBox[{"e", "[", "#", "]"}]}], ")"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"c", " ", "->", " ", "SType"}], ",", " ", 
    RowBox[{
     RowBox[{"e", " ", ":", " ", 
      RowBox[{"SOType", "[", 
       RowBox[{"T1", ",", "T2"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scaleso", "[", 
     RowBox[{"c_", ",", " ", "e_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c", " ", "~", "SCRO", "~", " ", 
       RowBox[{"e", "[", "#", "]"}]}], ")"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", " ", ":", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"SOType", "[", 
       RowBox[{"T2", ",", "T3"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T3"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compso", "[", 
     RowBox[{"e_", ",", " ", "f_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"e", "[", 
      RowBox[{"f", "[", "#", "]"}], "]"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", " ", ":", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"SOType", "[", 
       RowBox[{"T2", ",", "T3"}], "]"}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T1", ",", "T3"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compsor", "[", 
     RowBox[{"e_", ",", " ", "f_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"e", "[", "#", "]"}], "]"}], "&"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"K", " ", "->", " ", 
     RowBox[{"KType", "[", "T1", "]"}]}], " ", ";", " ", 
    RowBox[{"SOType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initialso", "[", 
     RowBox[{"K_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"SUMO", "[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"USET", "[", "T2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"K", "~", "OUTER", "~", 
            TemplateBox[{"i"},
             "Bra"]}], ")"}], "\[SmallCircle]", "#", "\[SmallCircle]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"i"},
             "Ket"], "~", "OUTER", "~", 
            SuperscriptBox[
             RowBox[{"(", "K", ")"}], "\[Dagger]"]}], ")"}]}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"e", "[", "_", "]"}], " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "_", "]"}], "[", "_", "]"}], " ", "->", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"OType", "[", 
         RowBox[{"T3", ",", "T3"}], "]"}], " ", "|", " ", 
        RowBox[{"f", "[", "_", "]"}]}], " ", ":", " ", 
       RowBox[{"SO", "[", 
        RowBox[{"T3", ",", "T1"}], "]"}]}]}], " ", ";", " ", 
     RowBox[{"SOType", "[", 
      RowBox[{"T3", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifso", "[", 
     RowBox[{"M_", ",", " ", "e_", ",", " ", "f_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"SUMO", "[", 
        RowBox[{
         RowBox[{"IDX", "[", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "M"}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"f", "[", "i", "]"}], "[", 
          RowBox[{
           RowBox[{"e", "[", "i", "]"}], "\[SmallCircle]", "#", 
           "\[SmallCircle]", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"e", "[", "i", "]"}], ")"}], "\[Dagger]"]}], "]"}]}], 
        "]"}], "&"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"linear", " ", "operator", " ", "predicates"}], " ", "*)"}], "\n", 
  
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isHermitian", "[", "A_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ADJO", "[", "A", "]"}], " ", "=", " ", "A"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNHermitian", "[", "A_", "]"}], " ", ":=", " ", 
    RowBox[{"DNEqQ", "[", 
     RowBox[{
      RowBox[{"ADJO", "[", "A", "]"}], ",", " ", "A"}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isNormal", "[", "A_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "\[SmallCircle]", " ", 
      RowBox[{"ADJO", "[", "A", "]"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"ADJO", "[", "A", "]"}], "\[SmallCircle]", " ", "A"}]}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNNormal", "[", "A_", "]"}], " ", ":=", " ", 
    RowBox[{"DNEqQ", "[", 
     RowBox[{
      RowBox[{"A", " ", "\[SmallCircle]", " ", 
       RowBox[{"ADJO", "[", "A", "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"ADJO", "[", "A", "]"}], "\[SmallCircle]", " ", "A"}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isProjection", "[", "A_", "]"}], " ", ":=", " ", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ADJO", "[", "A", "]"}], " ", "=", " ", "A"}], ",", " ", 
     RowBox[{
      RowBox[{"A", " ", "\[SmallCircle]", " ", "A"}], " ", "=", " ", "A"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNProjection", "[", "A_", "]"}], " ", ":=", " ", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{"ADJO", "[", "A", "]"}], ",", " ", "A"}], "]"}], ",", " ", 
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{"A", " ", "\[SmallCircle]", " ", "A"}], ",", " ", "A"}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T", ",", "T"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isUnitary", "[", 
    RowBox[{"A_", ",", "T_"}], "]"}], " ", ":=", " ", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], 
      " ", "=", " ", 
      RowBox[{"ONEO", "[", "T", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"A", " ", "\[SmallCircle]", " ", 
       RowBox[{"ADJO", "[", "A", "]"}]}], " ", "=", " ", 
      RowBox[{"ONEO", "[", "T", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNUnitary", "[", 
     RowBox[{"A_", ",", "T_"}], "]"}], " ", ":=", " ", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], 
        ",", " ", 
        RowBox[{"ONEO", "[", "T", "]"}]}], "]"}], ",", " ", 
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{"A", " ", "\[SmallCircle]", " ", 
         RowBox[{"ADJO", "[", "A", "]"}]}], ",", " ", 
        RowBox[{"ONEO", "[", "T", "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isIsometry", "[", 
    RowBox[{"A_", ",", "T2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], " ",
      "=", " ", 
     RowBox[{"ONEO", "[", "T2", "]"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNIsometry", "[", 
     RowBox[{"A_", ",", "T2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"DNEqQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], 
      ",", " ", 
      RowBox[{"ONEO", "[", "T2", "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "->", " ", 
    RowBox[{"OType", "[", 
     RowBox[{"T1", ",", "T2"}], "]"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isBiisometry", "[", 
    RowBox[{"A_", ",", "T1_", ",", "T2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], 
      " ", "=", " ", 
      RowBox[{"ONEO", "[", "T2", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"A", " ", "\[SmallCircle]", " ", 
       RowBox[{"ADJO", "[", "A", "]"}]}], " ", "=", " ", 
      RowBox[{"ONEO", "[", "T1", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNBiisometry", "[", 
     RowBox[{"A_", ",", "T1_", ",", "T2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ADJO", "[", "A", "]"}], " ", "\[SmallCircle]", " ", "A"}], 
        ",", " ", 
        RowBox[{"ONEO", "[", "T2", "]"}]}], "]"}], ",", " ", 
      RowBox[{"DNEqQ", "[", 
       RowBox[{
        RowBox[{"A", " ", "\[SmallCircle]", " ", 
         RowBox[{"ADJO", "[", "A", "]"}]}], ",", " ", 
        RowBox[{"ONEO", "[", "T1", "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"M", " ", "->", " ", 
     RowBox[{"SetType", "[", "S", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", "[", "_", "]"}], " ", "->", " ", 
     RowBox[{"OType", "[", 
      RowBox[{"T1", ",", "T2"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isQMeas", "[", 
    RowBox[{"M_", ",", " ", "f_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"SUMO", "[", 
      RowBox[{"i", ",", "M", ",", 
       RowBox[{
        RowBox[{"ADJO", "[", 
         RowBox[{"f", "[", "i", "]"}], "]"}], " ", "\[SmallCircle]", " ", 
        RowBox[{"f", "[", "i", "]"}]}]}], "]"}], " ", "=", " ", 
     RowBox[{"ONEO", "[", "T2", "]"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DNQMeas", "[", 
     RowBox[{"M_", ",", " ", "f_", ",", " ", "T2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"DNEqQ", "[", 
     RowBox[{
      RowBox[{"SUMO", "[", 
       RowBox[{"i", ",", "M", ",", 
        RowBox[{
         RowBox[{"ADJO", "[", 
          RowBox[{"f", "[", "i", "]"}], "]"}], " ", "\[SmallCircle]", " ", 
         RowBox[{"f", "[", "i", "]"}]}]}], "]"}], ",", " ", 
      RowBox[{"ONEO", "[", "T2", "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Program", " ", "Logic"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wp", "[", "S_", "]"}], "[", "M_", "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"e", "[", 
        RowBox[{"S", ",", "i"}], "]"}], "\[Dagger]"], "\[SmallCircle]", "M", 
      "\[SmallCircle]", 
      RowBox[{"e", "[", 
       RowBox[{"S", ",", "i"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"iset", "[", "S", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DenoSem", "[", 
     RowBox[{"while", "[", 
      RowBox[{"M_", ",", "S_", ",", 
       RowBox[{"n_", "+", "1"}]}], "]"}], "]"}], "[", "rho_", "]"}], ":=", 
   RowBox[{
    RowBox[{"DenoSem", "[", 
     RowBox[{"if", "[", 
      RowBox[{"M", ",", 
       RowBox[{"seq", "[", 
        RowBox[{"S", ",", 
         RowBox[{"while", "[", 
          RowBox[{"M", ",", "S", ",", "n"}], "]"}]}], "]"}], ",", "skip"}], 
      "]"}], "]"}], "[", "rho", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DenoSem", "[", 
     RowBox[{"seq", "[", 
      RowBox[{"S1_", ",", "S2_"}], "]"}], "]"}], "[", "rho_", "]"}], ":=", 
   RowBox[{
    RowBox[{"DenoSem", "[", "S2", "]"}], "[", 
    RowBox[{
     RowBox[{"DenoSem", "[", "S1", "]"}], "[", "rho", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DenoSem", "[", 
     RowBox[{"if", "[", 
      RowBox[{"M_", ",", "S1_", ",", "S0_"}], "]"}], "]"}], "[", "rho_", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"DenoSem", "[", "S0", "]"}], "[", 
     RowBox[{
      RowBox[{"M", "[", "0", "]"}], "\[SmallCircle]", "rho", "\[SmallCircle]", 
      RowBox[{"(", 
       SuperscriptBox[
        RowBox[{"M", "[", "0", "]"}], "\[Dagger]"], ")"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"DenoSem", "[", "S1", "]"}], "[", 
     RowBox[{
      RowBox[{"M", "[", "1", "]"}], "\[SmallCircle]", "rho", "\[SmallCircle]", 
      RowBox[{"(", 
       SuperscriptBox[
        RowBox[{"M", "[", "1", "]"}], "\[Dagger]"], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DenoSem", "[", "skip", "]"}], "[", "rho_", "]"}], ":=", "rho"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DenoSem", "[", "S_", "]"}], "[", "rho_", "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"e", "[", 
        RowBox[{"S", ",", "i"}], "]"}], "\[SmallCircle]", "rho", 
       "\[SmallCircle]", 
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"e", "[", 
          RowBox[{"S", ",", "i"}], "]"}], "\[Dagger]"], ")"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"iset", "[", "S", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Optimal", " ", "implementation", " ", "Jens", " ", "Paper"}], " ",
    "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"XGate", " ", "=", " ", 
   RowBox[{
    RowBox[{
     TemplateBox[{"0"},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{"1"},
      "Bra"]}], "+", 
    RowBox[{
     TemplateBox[{"1"},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{"0"},
      "Bra"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Id", " ", "=", " ", 
   RowBox[{
    RowBox[{
     TemplateBox[{"0"},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{"0"},
      "Bra"]}], "+", 
    RowBox[{
     TemplateBox[{"1"},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{"1"},
      "Bra"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SW", " ", "=", " ", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"0", ",", "0"}], "]"}]},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"0", ",", "0"}], "]"}]},
      "Bra"]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"1", ",", "1"}], "]"}]},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"1", ",", "1"}], "]"}]},
      "Bra"]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"1", ",", "0"}], "]"}]},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"0", ",", "1"}], "]"}]},
      "Bra"]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"0", ",", "1"}], "]"}]},
      "Ket"], "\[SmallCircle]", 
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"1", ",", "0"}], "]"}]},
      "Bra"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Diag", "[", 
    RowBox[{"c0_", ",", " ", "c1_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"c0", 
     RowBox[{
      TemplateBox[{"0"},
       "Ket"], "\[SmallCircle]", 
      TemplateBox[{"0"},
       "Bra"]}]}], " ", "+", " ", 
    RowBox[{"c1", 
     RowBox[{
      TemplateBox[{"1"},
       "Ket"], "\[SmallCircle]", 
      TemplateBox[{"1"},
       "Bra"]}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ct", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], "\[SmallCircle]", 
       TemplateBox[{"0"},
        "Bra"]}], ")"}], "\[CircleTimes]", "Id"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], "\[SmallCircle]", 
       TemplateBox[{"1"},
        "Bra"]}], ")"}], "\[CircleTimes]", "e"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CtCt", "[", "e_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"0"},
         "Ket"], "\[SmallCircle]", 
        TemplateBox[{"0"},
         "Bra"]}], ")"}], "\[CircleTimes]", "Id", "\[CircleTimes]", "Id"}], 
     " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"1"},
         "Ket"], "\[SmallCircle]", 
        TemplateBox[{"1"},
         "Bra"]}], ")"}], "\[CircleTimes]", 
      RowBox[{"Ct", "[", "e", "]"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"HGate", ";", " ", "CX", ";", " ", "XC", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<Definition`\>\"", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Quantum", " ", "Circuits"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"HGate", " ", "=", " ", 
   RowBox[{
    RowBox[{"CPX", "[", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], "\[SmallCircle]", 
       TemplateBox[{"0"},
        "Bra"]}], "+", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], "\[SmallCircle]", 
       TemplateBox[{"1"},
        "Bra"]}], "+", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], "\[SmallCircle]", 
       TemplateBox[{"0"},
        "Bra"]}], "+", 
      RowBox[{
       RowBox[{"CPX", "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{
        TemplateBox[{"1"},
         "Ket"], "\[SmallCircle]", 
        TemplateBox[{"1"},
         "Bra"]}]}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CX", " ", "=", " ", 
   RowBox[{"Ct", "[", "XGate", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XC", " ", "=", " ", 
    RowBox[{
    "SW", " ", "\[SmallCircle]", " ", "CX", " ", "\[SmallCircle]", " ", 
     "SW"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Code",
 CellChangeTimes->{3.938148458095381*^9, 3.938152250686346*^9, 
  3.938153418277816*^9, 3.938153895646846*^9, 3.938154336004554*^9, 
  3.938161178918406*^9, 3.938227046264477*^9, 3.938395109819232*^9, 
  3.938395628395279*^9, 3.938588201914959*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"64fe095f-946d-4b97-8c22-48a8455cbf3e"],

Cell[CellGroupData[{

Cell["Preliminary Example", "Chapter",ExpressionUUID->"2626d21b-c251-4ca4-b373-f264b30e545d"],

Cell["\<\
This is the formalization for the preliminary example. Firstly symbols and \
the context are defined.\
\>", "Text",
 CellChangeTimes->{{3.937550528341248*^9, 
  3.937550598666326*^9}},ExpressionUUID->"1ce63845-f41f-4d0f-bcc1-\
ed4aa806b2e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TPO", "[", "A_", "]"}], ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"i"},
           "Ket"], "\[SmallCircle]", 
          TemplateBox[{"j"},
           "Bra"]}], ")"}], "\[SmallCircle]", "A", "\[SmallCircle]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"i"},
           "Ket"], "\[SmallCircle]", 
          TemplateBox[{"j"},
           "Bra"]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", 
         RowBox[{"USET", "[", 
          RowBox[{"TProjK", "[", 
           RowBox[{"TCalc", "[", "A", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"USET", "[", 
        RowBox[{"TProjB", "[", 
         RowBox[{"TCalc", "[", "A", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", "[", "T_", "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"nv", ",", "nv"}], "]"}]},
      "Ket"], ",", 
     RowBox[{"{", 
      RowBox[{"nv", ",", 
       RowBox[{"USET", "[", "T", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiracCtx", "=", 
   RowBox[{"{", 
    RowBox[{"M", "->", 
     RowBox[{"OType", "[", 
      RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.9375420317409153`*^9, 
  3.937550573735235*^9},ExpressionUUID->"dfe93b1a-0c7d-4bc1-aa6d-\
fac44f9a9034"],

Cell["Check  that the two Dirac notations are equivalent.", "Text",
 CellChangeTimes->{{3.937550601044467*^9, 
  3.9375506252071133`*^9}},ExpressionUUID->"036f0e92-583d-4966-a817-\
e41cfbcd537f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DNEqQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"M", "\[CircleTimes]", 
      RowBox[{"ONEO", "[", "T", "]"}]}], ")"}], "\[SmallCircle]", 
    RowBox[{"sigma", "[", "T", "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ONEO", "[", "T", "]"}], "\[CircleTimes]", 
      RowBox[{"TPO", "[", "M", "]"}]}], ")"}], "\[SmallCircle]", 
    RowBox[{"sigma", "[", "T", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.9375420317409153`*^9, 
  3.937550573735235*^9},ExpressionUUID->"4ce2a631-6c76-4cea-874b-\
2eb9fcf50a51"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.937542029008238*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"bfda689b-99f4-4a61-a83a-a4bb47ec86eb"]
}, Open  ]],

Cell["Output the normalization results.", "Text",
 CellChangeTimes->{{3.937542042544427*^9, 
  3.9375420606026077`*^9}},ExpressionUUID->"9043805c-3839-42fc-af4f-\
06fd29b1d625"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DNNorm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"M", "\[CircleTimes]", 
     RowBox[{"ONEO", "[", "T", "]"}]}], ")"}], "\[SmallCircle]", 
   RowBox[{"sigma", "[", "T", "]"}]}], "]"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"b7e773d9-bf30-4b7e-a884-282bbdabb7e5"],

Cell[BoxData[
 RowBox[{"SUMK", "[", 
  RowBox[{
   RowBox[{"IDX", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$43", ",", 
       RowBox[{"USET", "[", "T", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$49", ",", 
       RowBox[{"USET", "[", "T", "]"}]}], "}"}]}], "]"}], ",", 
   TemplateBox[{"\"(\"", 
     TemplateBox[{"\"(\"", 
       TemplateBox[{"$49"}, "Bra"], 
       "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \\(S\\)]\\)\"", 
       TemplateBox[{
        "\"(\"", "M", 
         "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \\(K\\)]\\)\"", 
         TemplateBox[{"$43"}, "Ket"], "\")\""}, "RowDefault"], "\")\""}, 
      "RowDefault"], 
     TemplateBox[{
       RowBox[{"PAIR", "[", 
         RowBox[{"$49", ",", "$43"}], "]"}]}, "Ket"], "\")\""},
    "RowDefault"]}], "]"}]], "Output",
 CellLabel->"Out[47]=",ExpressionUUID->"ee3aa393-cc61-49a0-830c-71d55644810d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test File", "Chapter",ExpressionUUID->"4719c1c2-0fb2-49b7-af68-9526b6ac4c1f"],

Cell["Execute all test examples. This takes about 1 minute.", "Text",
 CellChangeTimes->{{3.937542598280188*^9, 3.937542613051287*^9}, {
  3.937542655021263*^9, 
  3.937542664922943*^9}},ExpressionUUID->"b3a8f67e-e08c-4a48-b2ed-\
df525e590b97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testRes", " ", "=", " ", 
  RowBox[{"TestReport", "[", "\"\<ExampleList.nb\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[149]:=",ExpressionUUID->"374de7a7-c425-461e-aadd-10a301ae1cd8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TestReportObject", "SummaryHead"], "NonInterpretableSummary"], 
      
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: ExampleList.nb\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"83.33%\"", ShowStringCharacters -> False], 
                    0.8333333333333334, AutoDelete -> True], PercentForm], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["318", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: ExampleList.nb\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"83.33%\"", ShowStringCharacters -> False], 
                    0.8333333333333334, AutoDelete -> True], PercentForm], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["318", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Success count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["265", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failure count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["53", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "96.5846099999999999994`5.63299580835671", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TestReportObject, 1730008, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", TestReportObject, 1730008, 
            10167448193831876883026068670637417176386324603980990256576, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "TestReportObject[<|Title -> Test Report: ExampleList.nb, <<6>>, \
TestsFailedWrongResultsKeys -> {2376144059081015643, 6311222310690632188, \
3564610715300937971, 3520770625541592864, 5714381024360803339, \
7935529820758691062, 3206891878673438509, 5523739738461836495, \
1584421063071967658, <<40>>, 5024017932696810121, 1130814315027604079, \
5406250337193438123, 1536249490960118271}|>]"& )],
  False,
  BoxID -> 10167448193831876883026068670637417176386324603980990256576,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.937541528905086*^9, 3.93814850179692*^9, 
  3.9381522991259537`*^9, 3.938153463179936*^9, 3.93815429102733*^9, 
  3.938154383356483*^9, 3.938162679959869*^9, 3.93816271851227*^9, 
  3.938395712048811*^9, 3.9385883089618673`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"1452cfd0-858c-4a21-b20f-680af57b6b53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testRes", "[", "\"\<TestsFailed\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[543]:=",ExpressionUUID->"d61cebd0-11c0-4e67-a844-31c694ac495a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TestsFailedWrongResults\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"2376144059081015643", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-49 cplmt1\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-49 cplmt1\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-49 cplmt1"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-49 cplmt1\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-49 cplmt1\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-49 cplmt1"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"cplmt", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["1", "\"O\""], "[", "T", "]"}], ",", "T"}], 
                    "]"}], ",", 
                    RowBox[{
                    SubscriptBox["0", "\"O\""], "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "]"}]}], "]"}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"cplmt", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["1", "\"O\""], "[", "T", "]"}], ",", "T"}], 
                    "]"}], ",", 
                    RowBox[{
                    SubscriptBox["0", "\"O\""], "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Block[{DiracCore`DiracCtx = {}}, 
                    DiracAll`DNEqQ[
                    $CellContext`cplmt[
                    DiracCore`ONEO[$CellContext`T], $CellContext`T], 
                    DiracCore`ZEROO[$CellContext`T, $CellContext`T]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882154047894`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "1632419a-3e20-45af-a970-6cccf93f8ef9", "TestID" -> 
          "COQQ-49 cplmt1", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "1ab3f172-bd28-4bc9-8b03-cb20bcea5a54", "Input" -> 
          HoldForm[
            Block[{DiracCore`DiracCtx = {}}, 
             DiracAll`DNEqQ[
              $CellContext`cplmt[
               DiracCore`ONEO[$CellContext`T], $CellContext`T], 
              DiracCore`ZEROO[$CellContext`T, $CellContext`T]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.008563`4.0831409418537765, "CPUTimeUsed" -> 0.008673000000001707, 
          "MemoryUsed" -> 19760, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6311222310690632188", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-121 choi2so_fun_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-121 choi2so_fun_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-121 choi2so_fun_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-121 choi2so_fun_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-121 choi2so_fun_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-121 choi2so_fun_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "\[Rule]", "SType"}], ",", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"choi2so", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "\"\\!\\(\\*SubscriptBox[\\(+\\), \\(O\\)]\\)\"", "B", 
                    "\")\""}, "RowDefault"], ",", "T1", ",", "T2"}], "]"}], 
                    "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"choi2so", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"choi2so", "[", 
                    RowBox[{"B", ",", "T1", ",", "T2"}], "]"}]}], "]"}], "[", 
                    "X", "]"}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "\[Rule]", "SType"}], ",", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"choi2so", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "\"\\!\\(\\*SubscriptBox[\\(+\\), \\(O\\)]\\)\"", "B", 
                    "\")\""}, "RowDefault"], ",", "T1", ",", "T2"}], "]"}], 
                    "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"choi2so", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"choi2so", "[", 
                    RowBox[{"B", ",", "T1", ",", "T2"}], "]"}]}], "]"}], "[", 
                    "X", "]"}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`c -> 
                    DiracCore`SType, $CellContext`A -> DiracCore`OType[
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                    
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`B -> DiracCore`OType[
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                    
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`X -> DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, 
                    DiracAll`DNEqQ[
                    $CellContext`choi2so[
                    DiracCore`ADDO[
                    
                    DiracCore`SCRO[$CellContext`c, $CellContext`A], \
$CellContext`B], $CellContext`T1, $CellContext`T2][$CellContext`X], 
                    $CellContext`addso[
                    $CellContext`scaleso[$CellContext`c, 
                    $CellContext`choi2so[$CellContext`A, $CellContext`T1, \
$CellContext`T2]], 
                    $CellContext`choi2so[$CellContext`B, $CellContext`T1, \
$CellContext`T2]][$CellContext`X]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882325900617`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "9740d7d8-99f2-4355-bd64-17d805c58100", "TestID" -> 
          "COQQ-121 choi2so_fun_is_linear", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "a6396973-0e77-4f78-940f-b53295550e79", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`c -> 
                DiracCore`SType, $CellContext`A -> DiracCore`OType[
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                  
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`B -> DiracCore`OType[
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                  
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`X -> DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, 
             DiracAll`DNEqQ[
              $CellContext`choi2so[
               DiracCore`ADDO[
                
                DiracCore`SCRO[$CellContext`c, $CellContext`A], \
$CellContext`B], $CellContext`T1, $CellContext`T2][$CellContext`X], 
              $CellContext`addso[
               $CellContext`scaleso[$CellContext`c, 
                $CellContext`choi2so[$CellContext`A, $CellContext`T1, \
$CellContext`T2]], 
               $CellContext`choi2so[$CellContext`B, $CellContext`T1, \
$CellContext`T2]][$CellContext`X]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.258419`5.5628394393988625, "CPUTimeUsed" -> 
          0.25963299999999734`, "MemoryUsed" -> 170024, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3564610715300937971", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-126 choi2so_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-126 choi2so_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-126 choi2so_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-126 choi2so_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-126 choi2so_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-126 choi2so_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "\[Rule]", "SType"}], ",", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"choi2so", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "\"\\!\\(\\*SubscriptBox[\\(+\\), \\(O\\)]\\)\"", "B", 
                    "\")\""}, "RowDefault"], ",", "T1", ",", "T2"}], "]"}], 
                    "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"choi2so", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"choi2so", "[", 
                    RowBox[{"B", ",", "T1", ",", "T2"}], "]"}]}], "]"}], "[", 
                    "X", "]"}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "\[Rule]", "SType"}], ",", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"choi2so", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "\"\\!\\(\\*SubscriptBox[\\(+\\), \\(O\\)]\\)\"", "B", 
                    "\")\""}, "RowDefault"], ",", "T1", ",", "T2"}], "]"}], 
                    "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"choi2so", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"choi2so", "[", 
                    RowBox[{"B", ",", "T1", ",", "T2"}], "]"}]}], "]"}], "[", 
                    "X", "]"}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`c -> 
                    DiracCore`SType, $CellContext`A -> DiracCore`OType[
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                    
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`B -> DiracCore`OType[
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                    
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`X -> DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, 
                    DiracAll`DNEqQ[
                    $CellContext`choi2so[
                    DiracCore`ADDO[
                    
                    DiracCore`SCRO[$CellContext`c, $CellContext`A], \
$CellContext`B], $CellContext`T1, $CellContext`T2][$CellContext`X], 
                    $CellContext`addso[
                    $CellContext`scaleso[$CellContext`c, 
                    $CellContext`choi2so[$CellContext`A, $CellContext`T1, \
$CellContext`T2]], 
                    $CellContext`choi2so[$CellContext`B, $CellContext`T1, \
$CellContext`T2]][$CellContext`X]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882334991937`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "0a9ac1b7-ef49-4e18-81b7-c556197b0ad4", "TestID" -> 
          "COQQ-126 choi2so_is_linear", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "66a338d4-bbce-450c-bba6-7ffd581e4968", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`c -> 
                DiracCore`SType, $CellContext`A -> DiracCore`OType[
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                  
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`B -> DiracCore`OType[
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2], 
                  
                  DiracCore`ProdType[$CellContext`T1, $CellContext`T2]], \
$CellContext`X -> DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, 
             DiracAll`DNEqQ[
              $CellContext`choi2so[
               DiracCore`ADDO[
                
                DiracCore`SCRO[$CellContext`c, $CellContext`A], \
$CellContext`B], $CellContext`T1, $CellContext`T2][$CellContext`X], 
              $CellContext`addso[
               $CellContext`scaleso[$CellContext`c, 
                $CellContext`choi2so[$CellContext`A, $CellContext`T1, \
$CellContext`T2]], 
               $CellContext`choi2so[$CellContext`B, $CellContext`T1, \
$CellContext`T2]][$CellContext`X]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.260239`5.565887379279645, "CPUTimeUsed" -> 
          0.2615099999999977, "MemoryUsed" -> 145296, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3520770625541592864", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-136 dualso_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-136 dualso_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-136 dualso_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"COQQ-136 dualso_is_linear\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-136 dualso_is_linear\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-136 dualso_is_linear"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M1", "\[Rule]", 
                    RowBox[{"SetType", "[", "S1", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e1", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f1", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"M2", "\[Rule]", 
                    RowBox[{"SetType", "[", "S2", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e2", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f2", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"a", "\[Rule]", "SType"}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"E1", "=", 
                    RowBox[{"superop", "[", 
                    RowBox[{"M1", ",", "e1", ",", "f1"}], "]"}]}], ";", 
                    RowBox[{"E2", "=", 
                    RowBox[{"superop", "[", 
                    RowBox[{"M2", ",", "e2", ",", "f2"}], "]"}]}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"a", ",", "E1"}], "]"}], ",", "E2"}], "]"}], ",", 
                    "T2", ",", "T1"}], "]"}], "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"dualso", "[", 
                    RowBox[{"E1", ",", "T2", ",", "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"dualso", "[", 
                    RowBox[{"E2", ",", "T2", ",", "T1"}], "]"}]}], "]"}], "[",
                     "X", "]"}]}], "]"}]}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M1", "\[Rule]", 
                    RowBox[{"SetType", "[", "S1", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e1", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f1", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"M2", "\[Rule]", 
                    RowBox[{"SetType", "[", "S2", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e2", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f2", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"a", "\[Rule]", "SType"}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"E1", "=", 
                    RowBox[{"superop", "[", 
                    RowBox[{"M1", ",", "e1", ",", "f1"}], "]"}]}], ";", 
                    RowBox[{"E2", "=", 
                    RowBox[{"superop", "[", 
                    RowBox[{"M2", ",", "e2", ",", "f2"}], "]"}]}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"a", ",", "E1"}], "]"}], ",", "E2"}], "]"}], ",", 
                    "T2", ",", "T1"}], "]"}], "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"addso", "[", 
                    RowBox[{
                    RowBox[{"scaleso", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"dualso", "[", 
                    RowBox[{"E1", ",", "T2", ",", "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"dualso", "[", 
                    RowBox[{"E2", ",", "T2", ",", "T1"}], "]"}]}], "]"}], "[",
                     "X", "]"}]}], "]"}]}]}], "]"}], "\"Copy to clipboard.\"",
                     TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M1 -> 
                    DiracSumExt`SetType[$CellContext`S1], $CellContext`e1[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`f1[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`M2 -> DiracSumExt`SetType[$CellContext`S2], $CellContext`e2[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`f2[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`a -> DiracCore`SType, $CellContext`X -> 
                    
                    DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, \
$CellContext`E1 = $CellContext`superop[$CellContext`M1, $CellContext`e1, \
$CellContext`f1]; $CellContext`E2 = $CellContext`superop[$CellContext`M2, \
$CellContext`e2, $CellContext`f2]; DiracAll`DNEqQ[
                    $CellContext`dualso[
                    $CellContext`addso[
                    $CellContext`scaleso[$CellContext`a, $CellContext`E1], \
$CellContext`E2], $CellContext`T2, $CellContext`T1][$CellContext`X], 
                    $CellContext`addso[
                    $CellContext`scaleso[$CellContext`a, 
                    $CellContext`dualso[$CellContext`E1, $CellContext`T2, \
$CellContext`T1]], 
                    $CellContext`dualso[$CellContext`E2, $CellContext`T2, \
$CellContext`T1]][$CellContext`X]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882431256557`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e0f97f9e-5c8e-472e-9a67-4f0df4fa79e6", "TestID" -> 
          "COQQ-136 dualso_is_linear", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "536884f8-556d-4f71-8843-c0faccc4280a", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`M1 -> 
                DiracSumExt`SetType[$CellContext`S1], $CellContext`e1[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`f1[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`M2 -> DiracSumExt`SetType[$CellContext`S2], $CellContext`e2[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`f2[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`a -> DiracCore`SType, $CellContext`X -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T1]}}, \
$CellContext`E1 = $CellContext`superop[$CellContext`M1, $CellContext`e1, \
$CellContext`f1]; $CellContext`E2 = $CellContext`superop[$CellContext`M2, \
$CellContext`e2, $CellContext`f2]; DiracAll`DNEqQ[
               $CellContext`dualso[
                $CellContext`addso[
                 $CellContext`scaleso[$CellContext`a, $CellContext`E1], \
$CellContext`E2], $CellContext`T2, $CellContext`T1][$CellContext`X], 
               $CellContext`addso[
                $CellContext`scaleso[$CellContext`a, 
                 $CellContext`dualso[$CellContext`E1, $CellContext`T2, \
$CellContext`T1]], 
                $CellContext`dualso[$CellContext`E2, $CellContext`T2, \
$CellContext`T1]][$CellContext`X]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 1.87363`6.423198829408568, "CPUTimeUsed" -> 
          1.8770430000000005`, "MemoryUsed" -> 184896, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"5714381024360803339", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-139 dualso0\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-139 dualso0\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-139 dualso0"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-139 dualso0\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-139 dualso0\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-139 dualso0"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"abortso", "[", 
                    RowBox[{"T", ",", "T1"}], "]"}], ",", "T1", ",", "T"}], 
                    "]"}], "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"abortso", "[", 
                    RowBox[{"T1", ",", "T"}], "]"}], "[", "X", "]"}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"abortso", "[", 
                    RowBox[{"T", ",", "T1"}], "]"}], ",", "T1", ",", "T"}], 
                    "]"}], "[", "X", "]"}], ",", 
                    RowBox[{
                    RowBox[{"abortso", "[", 
                    RowBox[{"T1", ",", "T"}], "]"}], "[", "X", "]"}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`X -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, 
                    DiracAll`DNEqQ[
                    $CellContext`dualso[
                    $CellContext`abortso[$CellContext`T, $CellContext`T1], \
$CellContext`T1, $CellContext`T][$CellContext`X], 
                    $CellContext`abortso[$CellContext`T1, \
$CellContext`T][$CellContext`X]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882453372474`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "5e4e59fd-b6db-477c-85bf-08ab7456f9f8", "TestID" -> 
          "COQQ-139 dualso0", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "c0c9f6da-30a9-40da-a897-b1433ef552ba", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`X -> 
                DiracCore`OType[$CellContext`T, $CellContext`T]}}, 
             DiracAll`DNEqQ[
              $CellContext`dualso[
               $CellContext`abortso[$CellContext`T, $CellContext`T1], \
$CellContext`T1, $CellContext`T][$CellContext`X], 
              $CellContext`abortso[$CellContext`T1, \
$CellContext`T][$CellContext`X]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.108577`5.186252835690935, "CPUTimeUsed" -> 
          0.10868100000000425`, "MemoryUsed" -> 7376, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7935529820758691062", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-152 dualso_if\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-152 dualso_if\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-152 dualso_if"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-152 dualso_if\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-152 dualso_if\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-152 dualso_if"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "Sm", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Nm", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"SetType", "[", "Sn", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fl", "[", "_", "]"}], "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fr", "[", "_", "]"}], "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"ifso", "[", 
                    RowBox[{"M", ",", "e", ",", 
                    RowBox[{
                    RowBox[{"superop", "[", 
                    RowBox[{
                    RowBox[{"Nm", "[", "#1", "]"}], ",", 
                    RowBox[{"fl", "[", "#1", "]"}], ",", 
                    RowBox[{"fr", "[", "#1", "]"}]}], "]"}], "&"}]}], "]"}], 
                    ",", "T2", ",", "T3"}], "]"}], "[", "X", "]"}], ",", 
                    RowBox[{"SUMO", "[", 
                    RowBox[{
                    RowBox[{"IDX", "[", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "M"}], "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"compso", "[", 
                    RowBox[{
                    RowBox[{"superop", "[", 
                    RowBox[{
                    RowBox[{"Nm", "[", "i", "]"}], ",", 
                    RowBox[{"fl", "[", "i", "]"}], ",", 
                    RowBox[{"fr", "[", "i", "]"}]}], "]"}], ",", 
                    RowBox[{"elemso", "[", 
                    RowBox[{"e", ",", "i"}], "]"}]}], "]"}], ",", "T2", ",", 
                    "T3"}], "]"}], "[", "X", "]"}]}], "]"}]}], "]"}]}], "]"}],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "Sm", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"e", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Nm", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"SetType", "[", "Sn", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fl", "[", "_", "]"}], "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fr", "[", "_", "]"}], "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T3", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"ifso", "[", 
                    RowBox[{"M", ",", "e", ",", 
                    RowBox[{
                    RowBox[{"superop", "[", 
                    RowBox[{
                    RowBox[{"Nm", "[", "#1", "]"}], ",", 
                    RowBox[{"fl", "[", "#1", "]"}], ",", 
                    RowBox[{"fr", "[", "#1", "]"}]}], "]"}], "&"}]}], "]"}], 
                    ",", "T2", ",", "T3"}], "]"}], "[", "X", "]"}], ",", 
                    RowBox[{"SUMO", "[", 
                    RowBox[{
                    RowBox[{"IDX", "[", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "M"}], "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"dualso", "[", 
                    RowBox[{
                    RowBox[{"compso", "[", 
                    RowBox[{
                    RowBox[{"superop", "[", 
                    RowBox[{
                    RowBox[{"Nm", "[", "i", "]"}], ",", 
                    RowBox[{"fl", "[", "i", "]"}], ",", 
                    RowBox[{"fr", "[", "i", "]"}]}], "]"}], ",", 
                    RowBox[{"elemso", "[", 
                    RowBox[{"e", ",", "i"}], "]"}]}], "]"}], ",", "T2", ",", 
                    "T3"}], "]"}], "[", "X", "]"}]}], "]"}]}], "]"}]}], "]"}],
                     "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`Sm], $CellContext`e[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`Nm[
                    Blank[]] -> 
                    DiracSumExt`SetType[$CellContext`Sn], $CellContext`fl[
                    Blank[]][
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T3, $CellContext`T1], \
$CellContext`fr[
                    Blank[]][
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T3, $CellContext`T1], \
$CellContext`X -> DiracCore`OType[$CellContext`T3, $CellContext`T3]}}, 
                    DiracAll`DNEqQ[
                    $CellContext`dualso[
                    $CellContext`ifso[$CellContext`M, $CellContext`e, \
$CellContext`superop[
                    $CellContext`Nm[#], 
                    $CellContext`fl[#], 
                    $CellContext`fr[#]]& ], $CellContext`T2, \
$CellContext`T3][$CellContext`X], 
                    DiracSumExt`SUMO[
                    DiracSumExt`IDX[{$CellContext`i, $CellContext`M}], 
                    $CellContext`dualso[
                    $CellContext`compso[
                    $CellContext`superop[
                    $CellContext`Nm[$CellContext`i], 
                    $CellContext`fl[$CellContext`i], 
                    $CellContext`fr[$CellContext`i]], 
                    $CellContext`elemso[$CellContext`e, $CellContext`i]], \
$CellContext`T2, $CellContext`T3][$CellContext`X]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882540560164`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "cd12300e-84f9-452e-9a88-dbb2d3c3de68", "TestID" -> 
          "COQQ-152 dualso_if", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "467ea9e5-38d0-49c7-80ce-762e37c8b2ab", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                DiracSumExt`SetType[$CellContext`Sm], $CellContext`e[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`Nm[
                  Blank[]] -> 
                DiracSumExt`SetType[$CellContext`Sn], $CellContext`fl[
                  Blank[]][
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T3, $CellContext`T1], \
$CellContext`fr[
                  Blank[]][
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T3, $CellContext`T1], \
$CellContext`X -> DiracCore`OType[$CellContext`T3, $CellContext`T3]}}, 
             DiracAll`DNEqQ[
              $CellContext`dualso[
               $CellContext`ifso[$CellContext`M, $CellContext`e, \
$CellContext`superop[
                 $CellContext`Nm[#], 
                 $CellContext`fl[#], 
                 $CellContext`fr[#]]& ], $CellContext`T2, \
$CellContext`T3][$CellContext`X], 
              DiracSumExt`SUMO[
               DiracSumExt`IDX[{$CellContext`i, $CellContext`M}], 
               $CellContext`dualso[
                $CellContext`compso[
                 $CellContext`superop[
                  $CellContext`Nm[$CellContext`i], 
                  $CellContext`fl[$CellContext`i], 
                  $CellContext`fr[$CellContext`i]], 
                 $CellContext`elemso[$CellContext`e, $CellContext`i]], \
$CellContext`T2, $CellContext`T3][$CellContext`X]]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm["MAYBE"], 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          5.086759`6.856956159986741, "CPUTimeUsed" -> 5.102353000000001, 
          "MemoryUsed" -> 285328, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3206891878673438509", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-155 dualqm_trlfEV\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-155 dualqm_trlfEV\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-155 dualqm_trlfEV"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-155 dualqm_trlfEV\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-155 dualqm_trlfEV\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-155 dualqm_trlfEV"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"AbortFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"AbortFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["AbortFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "m", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"O0", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    RowBox[{"O0", "[", "i", "]"}], 
                    "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \
\\(O\\)]\\)\"", 
                    RowBox[{
                    RowBox[{"f", "[", "i", "]"}], "\[SmallCircle]", "X", 
                    "\[SmallCircle]", 
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], "\[Dagger]"]}], "\")\""}, 
                    "RowDefault"], ",", "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    RowBox[{"SUMO", "[", 
                    RowBox[{
                    RowBox[{"IDX", "[", 
                    RowBox[{"{", 
                    RowBox[{"i$854053", ",", "M"}], "}"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"f", "[", "i$854053", "]"}], "\[Dagger]"], 
                    "\[SmallCircle]", 
                    RowBox[{"O0", "[", "i$854053", "]"}], "\[SmallCircle]", 
                    RowBox[{"f", "[", "i$854053", "]"}]}]}], "]"}], 
                    "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \
\\(O\\)]\\)\"", "X", "\")\""}, "RowDefault"], ",", "T2"}], "]"}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "m", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"O0", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    RowBox[{"O0", "[", "i", "]"}], 
                    "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \
\\(O\\)]\\)\"", 
                    RowBox[{
                    RowBox[{"f", "[", "i", "]"}], "\[SmallCircle]", "X", 
                    "\[SmallCircle]", 
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], "\[Dagger]"]}], "\")\""}, 
                    "RowDefault"], ",", "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    TemplateBox[{"\"(\"", 
                    RowBox[{"SUMO", "[", 
                    RowBox[{
                    RowBox[{"IDX", "[", 
                    RowBox[{"{", 
                    RowBox[{"i$854056", ",", "M"}], "}"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"f", "[", "i$854056", "]"}], "\[Dagger]"], 
                    "\[SmallCircle]", 
                    RowBox[{"O0", "[", "i$854056", "]"}], "\[SmallCircle]", 
                    RowBox[{"f", "[", "i$854056", "]"}]}]}], "]"}], 
                    "\"\\!\\(\\*SubscriptBox[\\(\[CenterDot]\\), \
\\(O\\)]\\)\"", "X", "\")\""}, "RowDefault"], ",", "T2"}], "]"}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`m], $CellContext`f[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`O0[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T1], \
$CellContext`X -> DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, 
                    DiracAll`DNEqQ[
                    DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                    $CellContext`DNTr[
                    DiracCore`MLTO[
                    $CellContext`O0[$CellContext`i], 
                    $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X]], $CellContext`T1]], 
                    $CellContext`DNTr[
                    DiracCore`MLTO[
                    $CellContext`dualqm[$CellContext`M, $CellContext`f, \
$CellContext`O0], $CellContext`X], $CellContext`T2]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Hold", "[", 
                    RowBox[{"Abort", "[", "]"}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Hold", "[", 
                    RowBox[{"Abort", "[", "]"}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Hold[
                    Abort[]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882596976447`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "56078eff-c954-4e9a-93f5-fd544500ba9b", "TestID" -> 
          "COQQ-155 dualqm_trlfEV", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "cba78b75-cefc-4fcf-ae91-0a14b8eb54b3", "Input" -> 
          HoldForm[
            
            Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                DiracSumExt`SetType[$CellContext`m], $CellContext`f[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`O0[
                  Blank[]] -> 
                DiracCore`OType[$CellContext`T1, $CellContext`T1], \
$CellContext`X -> DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, 
             DiracAll`DNEqQ[
              DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
               $CellContext`DNTr[
                DiracCore`MLTO[
                 $CellContext`O0[$CellContext`i], 
                 $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X]], $CellContext`T1]], 
              $CellContext`DNTr[
               DiracCore`MLTO[
                $CellContext`dualqm[$CellContext`M, $CellContext`f, \
$CellContext`O0], $CellContext`X], $CellContext`T2]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualMessages" -> {}, "ActualOutput" :> Hold[
            Abort[]], "Outcome" -> "Failure", "FailureType" -> "AbortFailure",
           "AbsoluteTimeUsed" -> 0.135612`5.282813118802549, "CPUTimeUsed" -> 
          0.13736000000000104`, "MemoryUsed" -> 87800, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True]|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"5523739738461836495", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-164 isolf_normal\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-164 isolf_normal\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-164 isolf_normal"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-164 isolf_normal\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-164 isolf_normal\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-164 isolf_normal"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNNormal", "[", "A", "]"}]}]}], "]"}]}], "]"}], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNNormal", "[", "A", "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNNormal[$CellContext`A]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882628429747`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "4d96cfc4-cfa1-4775-a30d-405c86717ec0", "TestID" -> 
          "COQQ-164 isolf_normal", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "9fc416b0-7fae-496e-a39b-020b24fc8db0", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNNormal[$CellContext`A]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.041471`4.768259505567503, "CPUTimeUsed" -> 
          0.04196700000000675, "MemoryUsed" -> 16992, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1584421063071967658", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-165 isolf_giso\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-165 isolf_giso\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-165 isolf_giso"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-165 isolf_giso\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-165 isolf_giso\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-165 isolf_giso"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNBiisometry[$CellContext`A, $CellContext`T, $CellContext`T]]]]],
                     Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588262884824*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "3657c5d7-24f4-4ca0-b6fb-c6436e53ec9b", "TestID" -> 
          "COQQ-165 isolf_giso", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "352ca5c6-acf6-4fff-9482-6b166a39ad5e", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNBiisometry[$CellContext`A, $CellContext`T, $CellContext`T]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.040714`4.760258770134979, "CPUTimeUsed" -> 0.04106699999999819, 
          "MemoryUsed" -> 30552, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3391171312878102644", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-169 isolf_unitary\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-169 isolf_unitary\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-169 isolf_unitary"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-169 isolf_unitary\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-169 isolf_unitary\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-169 isolf_unitary"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}]}]}], "]"}]}], "]"}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNUnitary[$CellContext`A, $CellContext`T]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882629306674`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "4337d71b-477e-43a9-b83d-9074f52e6894", "TestID" -> 
          "COQQ-169 isolf_unitary", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "6a94ffc3-1b6a-4f00-85c5-c13e410a711b", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T]; \
$CellContext`DNUnitary[$CellContext`A, $CellContext`T]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm["MAYBE"], 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.040237`4.755140590853651, "CPUTimeUsed" -> 0.04058800000000673, 
          "MemoryUsed" -> 19144, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2981567468441187173", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-174 isofKE\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-174 isofKE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-174 isofKE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-174 isofKE\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-174 isofKE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-174 isofKE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], 
                    
                    SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588263006509*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "90b59c6a-37da-4e05-a47c-c60a30a6e900", "TestID" -> 
          "COQQ-174 isofKE", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "bd582783-2bc7-411f-b41b-67c6c33c7375", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJO[$CellContext`A], 
                 
                 SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.046977`4.822400276662543, "CPUTimeUsed" -> 0.047383000000003506`, 
          "MemoryUsed" -> 30248, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7597971597064669228", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-179 gisofKEl\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-179 gisofKEl\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-179 gisofKEl"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-179 gisofKEl\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-179 gisofKEl\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-179 gisofKEl"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], 
                    
                    SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882631149406`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "0ab240cb-8264-4475-a510-31dc1cf2bae5", "TestID" -> 
          "COQQ-179 gisofKEl", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "e17d2be3-155a-42a7-a483-719f467a1082", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
              DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJO[$CellContext`A], 
                 
                 SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.046967`4.822307818499479, "CPUTimeUsed" -> 0.04738599999999593, 
          "MemoryUsed" -> 37648, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7942204643611307151", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-180 gisofKEr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-180 gisofKEr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-180 gisofKEr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-180 gisofKEr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-180 gisofKEr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-180 gisofKEr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", "v"}], "]"}]}]}], "]"}]}], "]"}], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", "v"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    SmallCircle[$CellContext`A, 
                    SmallCircle[
                    
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], \
$CellContext`v]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882631622334`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "01e4c787-4d0d-409c-91f9-b2a5cdb93ca4", "TestID" -> 
          "COQQ-180 gisofKEr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "a5280584-61d7-4e25-a67d-48c8a6e171e4", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
              DiracAll`DNEqQ[
                SmallCircle[$CellContext`A, 
                 SmallCircle[
                  
                  DiracCore`ADJO[$CellContext`A], $CellContext`v]], \
$CellContext`v]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.047205`4.824502999800896, "CPUTimeUsed" -> 0.047638999999996656`, 
          "MemoryUsed" -> 39552, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6823977191437763236", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-185 unitaryfKEl\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-185 unitaryfKEl\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-185 unitaryfKEl"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-185 unitaryfKEl\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-185 unitaryfKEl\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-185 unitaryfKEl"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", "v"}],
                     "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], 
                    
                    SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588263273535*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "329468d5-2286-40c8-bbda-1fde774cea53", "TestID" -> 
          "COQQ-185 unitaryfKEl", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "1f7d37ea-17ef-4856-a5f0-779af246ef14", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJO[$CellContext`A], 
                 
                 SmallCircle[$CellContext`A, $CellContext`v]], \
$CellContext`v]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.044609`4.799937485602872, "CPUTimeUsed" -> 0.0449740000000034, 
          "MemoryUsed" -> 23488, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"4227032665252594118", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-186 unitaryfKEr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-186 unitaryfKEr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-186 unitaryfKEr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-186 unitaryfKEr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-186 unitaryfKEr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-186 unitaryfKEr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", "v"}], "]"}]}]}], "]"}]}], "]"}], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", "v"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; DiracAll`DNEqQ[
                    SmallCircle[$CellContext`A, 
                    SmallCircle[
                    
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], \
$CellContext`v]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882633184547`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "df592aa9-3cf4-4f3b-b098-988429b24e6c", "TestID" -> 
          "COQQ-186 unitaryfKEr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "e2315583-b2c1-4af2-affa-2ea35557e671", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; DiracAll`DNEqQ[
                SmallCircle[$CellContext`A, 
                 SmallCircle[
                  
                  DiracCore`ADJO[$CellContext`A], $CellContext`v]], \
$CellContext`v]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.044682`4.800647602059007, "CPUTimeUsed" -> 0.04508399999999568, 
          "MemoryUsed" -> 27392, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7799780896384185558", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-191 projlf_idemE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-191 projlf_idemE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-191 projlf_idemE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-191 projlf_idemE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-191 projlf_idemE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-191 projlf_idemE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{"A", "\[SmallCircle]", "v"}]}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{"A", "\[SmallCircle]", "v"}]}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                    SmallCircle[$CellContext`A, 
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[$CellContext`A, $CellContext`v]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882634519997`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "f0cae17b-34f4-47b3-8a72-4772884b6954", "TestID" -> 
          "COQQ-191 projlf_idemE", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "3894fca8-9ee6-4cc9-aa17-0637980bdb15", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                SmallCircle[$CellContext`A, 
                 SmallCircle[$CellContext`A, $CellContext`v]], 
                SmallCircle[$CellContext`A, $CellContext`v]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.052281`4.8688588837475475, "CPUTimeUsed" -> 0.05272100000000535, 
          "MemoryUsed" -> 26232, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2406213791336357220", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-192 projf_idemE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-192 projf_idemE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-192 projf_idemE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-192 projf_idemE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-192 projf_idemE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-192 projf_idemE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{"A", "\[SmallCircle]", "v"}]}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{"A", "\[SmallCircle]", "v"}]}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                    SmallCircle[$CellContext`A, 
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[$CellContext`A, $CellContext`v]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882635046115`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "8a8a3522-e74e-4443-84db-66bf5e8f8bfc", "TestID" -> 
          "COQQ-192 projf_idemE", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "712ce1d6-d640-4868-b733-c2248bf362c2", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                SmallCircle[$CellContext`A, 
                 SmallCircle[$CellContext`A, $CellContext`v]], 
                SmallCircle[$CellContext`A, $CellContext`v]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.052026`4.866735434439024, "CPUTimeUsed" -> 0.052452000000002386`, 
          "MemoryUsed" -> 38672, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6822875361052327718", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-195 projlf_dot\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-195 projlf_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-195 projlf_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-195 projlf_dot\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-195 projlf_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-195 projlf_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}]}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJB[$CellContext`v], 
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJB[
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[$CellContext`A, $CellContext`v]]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882636203976`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "3f4e8dd3-6895-4ae3-ba38-b6278db2a4d2", "TestID" -> 
          "COQQ-195 projlf_dot", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "fbb6833a-619a-4988-841b-7b00f231e959", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJB[$CellContext`v], 
                 SmallCircle[$CellContext`A, $CellContext`v]], 
                SmallCircle[
                 DiracCore`ADJB[
                  SmallCircle[$CellContext`A, $CellContext`v]], 
                 SmallCircle[$CellContext`A, $CellContext`v]]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.062817`4.948592189452636, "CPUTimeUsed" -> 0.06347800000000348, 
          "MemoryUsed" -> 43440, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3608399456972594043", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-196 projf_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-196 projf_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-196 projf_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-196 projf_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-196 projf_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-196 projf_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}]}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T", "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJB[$CellContext`v], 
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJB[
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[$CellContext`A, $CellContext`v]]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588263683634*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "68895122-829f-4524-a904-43ca62151c3c", "TestID" -> 
          "COQQ-196 projf_dot", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "e39b6ee8-c666-44ec-a37e-4bedf7079917", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJB[$CellContext`v], 
                 SmallCircle[$CellContext`A, $CellContext`v]], 
                SmallCircle[
                 DiracCore`ADJB[
                  SmallCircle[$CellContext`A, $CellContext`v]], 
                 SmallCircle[$CellContext`A, $CellContext`v]]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.061193`4.937216742931048, "CPUTimeUsed" -> 0.06167700000000309, 
          "MemoryUsed" -> 54424, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3123895946180362428", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-200 normallfZ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-200 normallfZ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-200 normallfZ"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-200 normallfZ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-200 normallfZ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-200 normallfZ"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"c", "\[Rule]", "SType"}]}], "}"}]}], "}"}], ",", 
                    
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"c", "\[Rule]", "SType"}]}], "}"}]}], "}"}], ",", 
                    
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`c -> 
                    DiracCore`SType}}, $CellContext`isNormal[$CellContext`A]; \
$CellContext`DNNormal[
                    DiracCore`SCRO[$CellContext`c, $CellContext`A]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882637809286`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "9689ed58-ee2e-4bc2-9ad9-5c1f0428869e", "TestID" -> 
          "COQQ-200 normallfZ", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "8ce10afe-e9f3-47c9-b416-1aaae7d9ae64", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`c -> 
                 DiracCore`SType}}, $CellContext`isNormal[$CellContext`A]; \
$CellContext`DNNormal[
                DiracCore`SCRO[$CellContext`c, $CellContext`A]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.514049`5.861519516468006, "CPUTimeUsed" -> 0.5228310000000107, 
          "MemoryUsed" -> 311832, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2116977288441022116", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-202 isolf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-202 isolf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-202 isolf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-202 isolf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-202 isolf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-202 isolf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"B", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T3"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"B", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T3"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isIsometry[$CellContext`B, $CellContext`T3]; \
$CellContext`DNIsometry[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T3]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588264323889*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "efee2e19-e689-43d8-b752-1cfa5df5a36e", "TestID" -> 
          "COQQ-202 isolf_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "20fd823e-4927-4d22-8775-23b847e89d0e", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isIsometry[$CellContext`B, $CellContext`T3]; \
$CellContext`DNIsometry[
                
                SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T3]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.085111`5.080500691060827, "CPUTimeUsed" -> 0.08570800000000389, 
          "MemoryUsed" -> 36384, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"9095644617880154865", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-203 gisolf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-203 gisolf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-203 gisolf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-203 gisolf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-203 gisolf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-203 gisolf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"B", ",", "T2", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T1", ",", 
                    "T3"}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"B", ",", "T2", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T1", ",", 
                    "T3"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`isBiisometry[$CellContext`B, $CellContext`T2, $CellContext`T3]; \
$CellContext`DNBiisometry[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T1, $CellContext`T3]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882644094086`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "bd701352-bd4d-4234-8bbd-67388fdee471", "TestID" -> 
          "COQQ-203 gisolf_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "9b36c276-3d41-4c42-b806-abb0aec5a2c2", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`isBiisometry[$CellContext`B, $CellContext`T2, $CellContext`T3]; \
$CellContext`DNBiisometry[
                
                SmallCircle[$CellContext`A, $CellContext`B], $CellContext`T1, \
$CellContext`T3]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.171234`5.384104999682051, "CPUTimeUsed" -> 
          0.1726199999999949, "MemoryUsed" -> 53176, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"8783513725688015031", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-204 unitarylf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-204 unitarylf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-204 unitarylf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-204 unitarylf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-204 unitarylf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-204 unitarylf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T]; $CellContext`DNUnitary[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882645810747`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "cc278eaa-0c9d-49e4-a3d0-584403f7fc41", "TestID" -> 
          "COQQ-204 unitarylf_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "72143f02-804f-491a-ba0b-c313bcdddeed", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T]; $CellContext`DNUnitary[
                
                SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.161317`5.35819513470117, "CPUTimeUsed" -> 
          0.16236800000000073`, "MemoryUsed" -> 82360, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2088003151996025417", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-205 normalf_adj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-205 normalf_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-205 normalf_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-205 normalf_adj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-205 normalf_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-205 normalf_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                    DiracCore`ADJO[$CellContext`A]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882647428126`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "d9e11c3d-0f76-4b13-975c-41ddfe082232", "TestID" -> 
          "COQQ-205 normalf_adj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "56ef726f-77cd-45e3-8441-73af6ad136c4", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                DiracCore`ADJO[$CellContext`A]]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm["MAYBE"], 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.348775`5.693060345218776, "CPUTimeUsed" -> 0.35493499999999756`, 
          "MemoryUsed" -> 195704, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7679808975907408493", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-206 normalf_tr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-206 normalf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-206 normalf_tr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-206 normalf_tr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-206 normalf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-206 normalf_tr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                    $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882650920067`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "ea4ea3ed-582d-46e9-b907-10099821a558", "TestID" -> 
          "COQQ-206 normalf_tr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "782c4ffd-c265-4b92-9936-56a46496577b", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.442174`5.796108200144116, "CPUTimeUsed" -> 0.44827800000000195`, 
          "MemoryUsed" -> 156896, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1583187462526954244", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-207 normalf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-207 normalf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-207 normalf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-207 normalf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-207 normalf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-207 normalf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882655346384`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "04bcb091-433c-497c-b6b5-f6799c07ed2e", "TestID" -> 
          "COQQ-207 normalf_conj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "27417510-7a10-4cfa-9e16-993b022e94e2", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.428763`5.782732298795763, "CPUTimeUsed" -> 0.4356250000000017, 
          "MemoryUsed" -> 195792, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"4840546753864272686", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-208 normalfZ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-208 normalfZ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-208 normalfZ"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-208 normalfZ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-208 normalfZ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-208 normalfZ"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"c", "\[Rule]", "SType"}]}], "}"}]}], "}"}], ",", 
                    
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"c", "\[Rule]", "SType"}]}], "}"}]}], "}"}], ",", 
                    
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", "c", "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`c -> 
                    DiracCore`SType}}, $CellContext`isNormal[$CellContext`A]; \
$CellContext`DNNormal[
                    DiracCore`SCRO[$CellContext`c, $CellContext`A]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882659638786`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "187d73ea-658c-416e-8204-8147b4f6e769", "TestID" -> 
          "COQQ-208 normalfZ", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "3fe02be4-754f-487d-8209-496aae6f2cc0", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`c -> 
                 DiracCore`SType}}, $CellContext`isNormal[$CellContext`A]; \
$CellContext`DNNormal[
                DiracCore`SCRO[$CellContext`c, $CellContext`A]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.53854`5.881732963839471, "CPUTimeUsed" -> 0.5469319999999911, 
          "MemoryUsed" -> 223416, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"4301601528644006487", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-209 normalfN\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-209 normalfN\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-209 normalfN"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-209 normalfN\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-209 normalfN\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-209 normalfN"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", 
                    RowBox[{"CPX", "[", 
                    RowBox[{"-", "1"}], "]"}], "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isNormal", "[", "A", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    TemplateBox[{"\"(\"", 
                    RowBox[{"CPX", "[", 
                    RowBox[{"-", "1"}], "]"}], "A", "\")\""}, "RowDefault"], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                    DiracCore`SCRO[
                    DiracCore`CPX[-1], $CellContext`A]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882665029225`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "79ae2a18-f085-4539-90b0-3a82f7e59d23", "TestID" -> 
          "COQQ-209 normalfN", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "3aa0b41b-b8cf-41ef-97b5-289828c2bb29", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isNormal[$CellContext`A]; $CellContext`DNNormal[
                DiracCore`SCRO[
                 DiracCore`CPX[-1], $CellContext`A]]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm["MAYBE"], 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.360349`5.707238319023946, "CPUTimeUsed" -> 0.36662599999999657`, 
          "MemoryUsed" -> 114776, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"3836528177281123734", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-216 projf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-216 projf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-216 projf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-216 projf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-216 projf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-216 projf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882670764756`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e7e71304-ce59-4dfc-8f37-77054300feab", "TestID" -> 
          "COQQ-216 projf_conj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "e33adf4e-7365-4e50-8b1a-a2bb23e6b046", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.108741`5.186908320359053, "CPUTimeUsed" -> 0.1098350000000039, 
          "MemoryUsed" -> 50976, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"357299359808096790", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-217 projf_tr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-217 projf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-217 projf_tr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-217 projf_tr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-217 projf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-217 projf_tr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], "]"}]}]}], 
                    "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                    $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882671856174`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e2312155-a579-4184-b580-61706a000883", "TestID" -> 
          "COQQ-217 projf_tr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "a1615e6e-d2a0-490d-9a6f-0d5b0d975c53", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T]]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.109282`5.189063632385187, "CPUTimeUsed" -> 0.11038200000000131`, 
          "MemoryUsed" -> 22336, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"820605549904745463", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-218 isof_conj\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-218 isof_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-218 isof_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-218 isof_conj\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-218 isof_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-218 isof_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`DNIsometry[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882672953286`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "fad9647b-7596-48e6-a450-5209f7b1ffab", "TestID" -> 
          "COQQ-218 isof_conj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "907326b6-8b91-43a5-acc6-fc070ea831d1", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`DNIsometry[
                $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.063732`4.954872545298756, "CPUTimeUsed" -> 
          0.06436900000000634, "MemoryUsed" -> 33688, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"4451301246220635595", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-219 isof_comp\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-219 isof_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-219 isof_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-219 isof_comp\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-219 isof_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-219 isof_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"B", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T3"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"B", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T3"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isIsometry[$CellContext`B, $CellContext`T3]; \
$CellContext`DNIsometry[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T3]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882673595204`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e35f0232-8ce4-43d5-b47c-fc0e852c49c5", "TestID" -> 
          "COQQ-219 isof_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "165338f5-41bb-4bc1-94e1-37b89264698f", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isIsometry[$CellContext`B, $CellContext`T3]; \
$CellContext`DNIsometry[
                
                SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T3]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.085973`5.084877079399999, "CPUTimeUsed" -> 0.08657000000000892, 
          "MemoryUsed" -> 47736, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2755833850205809781", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-220 gisof_adj\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-220 gisof_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-220 gisof_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-220 gisof_adj\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-220 gisof_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-220 gisof_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], ",", "T2", ",", 
                    "T1"}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], ",", "T2", ",", 
                    "T1"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`DNBiisometry[
                    
                    DiracCore`ADJO[$CellContext`A], $CellContext`T2, \
$CellContext`T1]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882674459248`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "b2c1a8e5-0e7a-461c-8ca9-7c445c65a59d", "TestID" -> 
          "COQQ-220 gisof_adj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "1a1e5e23-3a94-471f-b074-15e64fb22d44", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`DNBiisometry[
                
                DiracCore`ADJO[$CellContext`A], $CellContext`T2, \
$CellContext`T1]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.083837`5.073950727076173, "CPUTimeUsed" -> 
          0.08464799999999428, "MemoryUsed" -> 39064, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6155107173543060453", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-221 gisof_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-221 gisof_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-221 gisof_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-221 gisof_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-221 gisof_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-221 gisof_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T1", 
                    ",", "T2"}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T1", 
                    ",", "T2"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`DNBiisometry[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T1, $CellContext`T2]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882675301795`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "3f111217-537d-4d5e-8735-811df821a828", "TestID" -> 
          "COQQ-221 gisof_conj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "2091629f-2733-44b3-b571-e86ce98dbabc", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`DNBiisometry[
                $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T1, $CellContext`T2]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.122903`5.240077481756237, "CPUTimeUsed" -> 
          0.12375199999999609`, "MemoryUsed" -> 59080, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1762135322256765231", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-222 gisof_tr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-222 gisof_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-222 gisof_tr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-222 gisof_tr\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-222 gisof_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-222 gisof_tr"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", "A", "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2", 
                    ",", "T1"}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", "A", "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2", 
                    ",", "T1"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A]; $CellContext`DNBiisometry[
                    $CellContext`TPO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2, $CellContext`T1]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882676535244`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "fa1a5068-2efd-4fe6-bf65-92a3ed651b62", "TestID" -> 
          "COQQ-222 gisof_tr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "d304a886-1635-4ab2-a0c9-3830b48d3b7f", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isBiisometry[$CellContext`A]; $CellContext`DNBiisometry[
                $CellContext`TPO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2, $CellContext`T1]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.126211`5.251612205601545, "CPUTimeUsed" -> 
          0.12600499999999926`, "MemoryUsed" -> 63320, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"325426661938754713", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-223 gisof_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-223 gisof_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-223 gisof_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-223 gisof_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-223 gisof_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-223 gisof_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"B", ",", "T2", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T1", ",", 
                    "T3"}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T3"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"B", ",", "T2", ",", "T3"}], "]"}], ";", 
                    RowBox[{"DNBiisometry", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T1", ",", 
                    "T3"}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`isBiisometry[$CellContext`B, $CellContext`T2, $CellContext`T3]; \
$CellContext`DNBiisometry[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T1, $CellContext`T3]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882677801967`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "74299125-4a57-4af6-8f65-1e01c15cf80d", "TestID" -> 
          "COQQ-223 gisof_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "10250069-77fc-4170-b364-92bf7e27061f", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T3]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; \
$CellContext`isBiisometry[$CellContext`B, $CellContext`T2, $CellContext`T3]; \
$CellContext`DNBiisometry[
                
                SmallCircle[$CellContext`A, $CellContext`B], $CellContext`T1, \
$CellContext`T3]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.16832`5.376650720305639, "CPUTimeUsed" -> 
          0.1695140000000066, "MemoryUsed" -> 33024, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"273108693054168290", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-224 unitaryf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-224 unitaryf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-224 unitaryf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-224 unitaryf_comp\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-224 unitaryf_comp\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-224 unitaryf_comp"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[SmallCircle]", "B"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T]; $CellContext`DNUnitary[
                    
                    SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T]]]]], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.93858826794896*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "f4e7f0ff-8b03-48ff-ad76-1fb71f312ba5", "TestID" -> 
          "COQQ-224 unitaryf_comp", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "ccb41a14-e939-4f84-87ce-1a1be2c95487", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T]; $CellContext`DNUnitary[
                
                SmallCircle[$CellContext`A, $CellContext`B], \
$CellContext`T]]]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.158605`5.350831872100978, "CPUTimeUsed" -> 
          0.15955600000000203`, "MemoryUsed" -> 27048, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1277441057387299261", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-225 unitaryf_adj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-225 unitaryf_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-225 unitaryf_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-225 unitaryf_adj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-225 unitaryf_adj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-225 unitaryf_adj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                    DiracCore`ADJO[$CellContext`A], $CellContext`T]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882681079926`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "ade45383-3b90-48a8-82e4-7e9c283aa2e6", "TestID" -> 
          "COQQ-225 unitaryf_adj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "2697c22c-7460-4ee8-98f2-c56ba1cde2ff", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                DiracCore`ADJO[$CellContext`A], $CellContext`T]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.080535`5.056499660850912, "CPUTimeUsed" -> 
          0.08147299999999547, "MemoryUsed" -> 43728, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"2730002035924990831", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-226 unitaryf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-226 unitaryf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-226 unitaryf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-226 unitaryf_conj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-226 unitaryf_conj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-226 unitaryf_conj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T], $CellContext`T]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882681889424`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "ad2b09fc-401b-4b49-8870-a91fedaf1afb", "TestID" -> 
          "COQQ-226 unitaryf_conj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "7d63c617-3a20-4b7a-a9e5-dc348aa91ad7", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                $CellContext`CONJO[$CellContext`A, $CellContext`T, \
$CellContext`T], $CellContext`T]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.120358`5.230989960248487, "CPUTimeUsed" -> 
          0.12104599999999976`, "MemoryUsed" -> 80608, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7858325947143340574", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-227 unitaryf_tr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-227 unitaryf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-227 unitaryf_tr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-227 unitaryf_tr\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-227 unitaryf_tr\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-227 unitaryf_tr"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"TPO", "[", 
                    RowBox[{"A", ",", "T", ",", "T"}], "]"}], ",", "T"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                    $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T], $CellContext`T]]]]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882683097467`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "39490415-14c9-4384-a7f8-9366655a0322", "TestID" -> 
          "COQQ-227 unitaryf_tr", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "e1484218-afe0-4a62-b80c-d1a482d7a4ea", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T]; $CellContext`DNUnitary[
                $CellContext`TPO[$CellContext`A, $CellContext`T, \
$CellContext`T], $CellContext`T]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.116814`5.218009893334272, "CPUTimeUsed" -> 
          0.11755899999999286`, "MemoryUsed" -> 46536, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"5437650428011150627", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-230 isolf_ns\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-230 isolf_ns\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-230 isolf_ns"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-230 isolf_ns\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-230 isolf_ns\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-230 isolf_ns"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2"}], 
                    "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNIsometry", "[", 
                    RowBox[{
                    RowBox[{"CONJO", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ",", "T2"}], 
                    "]"}]}]}], "]"}]}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`DNIsometry[
                    $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882684296227`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e876ee86-c390-41f1-b2f7-bfe904e8f603", "TestID" -> 
          "COQQ-230 isolf_ns", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "44f09460-4832-4877-89c2-28d9720bfe78", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`DNIsometry[
                $CellContext`CONJO[$CellContext`A, $CellContext`T1, \
$CellContext`T2], $CellContext`T2]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.063659`4.954374809969742, "CPUTimeUsed" -> 
          0.06407000000000096, "MemoryUsed" -> 41512, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7680748773208278015", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-231 unitarymx_tens\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-231 unitarymx_tens\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-231 unitarymx_tens"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-231 unitarymx_tens\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-231 unitarymx_tens\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-231 unitarymx_tens"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T1"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[CircleTimes]", "B"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T1"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T1"}], "]"}], ";", 
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"B", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNUnitary", "[", 
                    RowBox[{
                    RowBox[{"A", "\[CircleTimes]", "B"}], ",", 
                    RowBox[{"ProdType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    
                    DiracCore`OType[$CellContext`T1, $CellContext`T1], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T1]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T2]; \
$CellContext`DNUnitary[
                    CircleTimes[$CellContext`A, $CellContext`B], 
                    DiracCore`ProdType[$CellContext`T1, $CellContext`T2]]]]]],
                     Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"MAYBE\"", "&&", "\"MAYBE\""}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    And["MAYBE", "MAYBE"]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882684937696`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "7c61c0bf-7cbc-4f76-9903-fc299d498b88", "TestID" -> 
          "COQQ-231 unitarymx_tens", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "6ea02788-66cc-4951-a7e1-4c1483e5349c", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T1], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isUnitary[$CellContext`A, $CellContext`T1]; \
$CellContext`isUnitary[$CellContext`B, $CellContext`T2]; \
$CellContext`DNUnitary[
                CircleTimes[$CellContext`A, $CellContext`B], 
                DiracCore`ProdType[$CellContext`T1, $CellContext`T2]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
            And["MAYBE", "MAYBE"]], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.172533`5.3873871717179105, "CPUTimeUsed" -> 
          0.17397999999999314`, "MemoryUsed" -> 89896, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"8778015238489697371", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-232 isof_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-232 isof_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-232 isof_dot"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-232 isof_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-232 isof_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-232 isof_dot"]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T2", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJB[
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[$CellContext`A, $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882686668034`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "e15990a0-0cae-4b8f-a6f5-6fa7a57432c4", "TestID" -> 
          "COQQ-232 isof_dot", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "1b701019-a038-4241-bc3b-03e51f990ed9", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJB[
                  SmallCircle[$CellContext`A, $CellContext`v]], 
                 SmallCircle[$CellContext`A, $CellContext`v]], 
                SmallCircle[
                 DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.056949`4.906001100289345, "CPUTimeUsed" -> 0.05741799999999131, 
          "MemoryUsed" -> 35528, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"7383477628151545425", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-233 isofA_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-233 isofA_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-233 isofA_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-233 isofA_dot\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-233 isofA_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-233 isofA_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJB[
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882687241855`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "7fd15324-9769-4558-b9fd-7643e2539485", "TestID" -> 
          "COQQ-233 isofA_dot", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "8f865dac-312b-49b2-a56b-1df4fecbe7c5", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJB[
                  SmallCircle[
                   DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                 SmallCircle[
                  DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                SmallCircle[
                 DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.057411`4.909510109421778, "CPUTimeUsed" -> 0.05784900000000448, 
          "MemoryUsed" -> 31024, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6744020204489124792", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-234 gisofA_dot\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-234 gisofA_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-234 gisofA_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-234 gisofA_dot\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-234 gisofA_dot\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-234 gisofA_dot"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"v", "\[Rule]", 
                    RowBox[{"KType", "[", "T1", "]"}]}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"isBiisometry", "[", 
                    RowBox[{"A", ",", "T1", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]",
                     "v"}], ")"}]}], ",", 
                    RowBox[{
                    SuperscriptBox["v", 
                    SubscriptBox["\"\[Dagger]\"", "\"B\""]], "\[SmallCircle]",
                     "v"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                    DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    SmallCircle[
                    DiracCore`ADJB[
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                    SmallCircle[
                    DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882687820554`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "171d0d88-dd91-48b8-af58-8cc699a12761", "TestID" -> 
          "COQQ-234 gisofA_dot", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "ba8a5fd3-e749-49c8-9fe8-ed76c26719e5", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`v -> 
                 DiracCore`KType[$CellContext`T1]}}, \
$CellContext`isBiisometry[$CellContext`A, $CellContext`T1, $CellContext`T2]; 
              DiracAll`DNEqQ[
                SmallCircle[
                 DiracCore`ADJB[
                  SmallCircle[
                   DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                 SmallCircle[
                  DiracCore`ADJO[$CellContext`A], $CellContext`v]], 
                SmallCircle[
                 DiracCore`ADJB[$CellContext`v], $CellContext`v]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.056877`4.905451679122521, "CPUTimeUsed" -> 0.05732599999999621, 
          "MemoryUsed" -> 36664, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"4113694783512852356", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-235 unitary_rowMcol\"", HoldForm],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-235 unitary_rowMcol\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-235 unitary_rowMcol"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-235 unitary_rowMcol\"", HoldForm],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-235 unitary_rowMcol\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-235 unitary_rowMcol"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"i", "\[Rule]", "T"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"i"}, "Bra"], "\[SmallCircle]", 
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", 
                    TemplateBox[{"i"}, "Ket"]}], ")"}]}], ",", 
                    RowBox[{"CPX", "[", "1", "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], ",", 
                    RowBox[{"i", "\[Rule]", "T"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isUnitary", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"i"}, "Bra"], "\[SmallCircle]", 
                    SuperscriptBox["A", 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[SmallCircle]", 
                    TemplateBox[{"i"}, "Ket"]}], ")"}]}], ",", 
                    RowBox[{"CPX", "[", "1", "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`i -> $CellContext`T}}, $CellContext`isUnitary[$CellContext`A, \
$CellContext`T]; DiracAll`DNEqQ[
                    SmallCircle[
                    SmallCircle[
                    Bra[{$CellContext`i}], 
                    DiracCore`ADJO[$CellContext`A]], 
                    SmallCircle[$CellContext`A, 
                    Ket[{$CellContext`i}]]], 
                    DiracCore`CPX[1]]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882688393636`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "c2e4880b-c0fb-48e4-abfd-fb829e09551c", "TestID" -> 
          "COQQ-235 unitary_rowMcol", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "0ec82ce7-3362-4b4e-9797-ec60311c089b", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T], \
$CellContext`i -> $CellContext`T}}, $CellContext`isUnitary[$CellContext`A, \
$CellContext`T]; DiracAll`DNEqQ[
                SmallCircle[
                 SmallCircle[
                  Bra[{$CellContext`i}], 
                  DiracCore`ADJO[$CellContext`A]], 
                 SmallCircle[$CellContext`A, 
                  Ket[{$CellContext`i}]]], 
                DiracCore`CPX[1]]]]], "ExpectedMessages" -> HoldForm[{}], 
          "ActualOutput" -> HoldForm["MAYBE"], "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 0.024238`4.535011778969863, "CPUTimeUsed" -> 
          0.02437999999999363, "MemoryUsed" -> 22096, 
          "IntermediateTestsTree" -> {}, "ExpectedOutput" -> HoldForm[True], 
          "Outcome" -> "Failure", "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"6008669342102572005", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-236 qmeasure_tpE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-236 qmeasure_tpE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-236 qmeasure_tpE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-236 qmeasure_tpE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-236 qmeasure_tpE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-236 qmeasure_tpE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMO", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"f", "[", "i", "]"}]}]}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["1", "\"O\""], "[", "T2", "]"}]}], "]"}]}]}],
                     "]"}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMO", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]], "\[SmallCircle]", 
                    RowBox[{"f", "[", "i", "]"}]}]}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["1", "\"O\""], "[", "T2", "]"}]}], "]"}]}]}],
                     "]"}]}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`f}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    DiracSumExt`SUMO[$CellContext`i, $CellContext`M, 
                    SmallCircle[
                    DiracCore`ADJO[
                    $CellContext`f[$CellContext`i]], 
                    $CellContext`f[$CellContext`i]]], 
                    DiracCore`ONEO[$CellContext`T2]]]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588268864063*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "4380e440-9866-4b51-b4ac-5c6a20d3c441", "TestID" -> 
          "COQQ-236 qmeasure_tpE", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "67a49a7d-0b51-4c37-b2a7-fc484e0739a2", "Input" -> 
          HoldForm[
            Module[{$CellContext`f}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                 DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                   Blank[]] -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
              DiracAll`DNEqQ[
                DiracSumExt`SUMO[$CellContext`i, $CellContext`M, 
                 SmallCircle[
                  DiracCore`ADJO[
                   $CellContext`f[$CellContext`i]], 
                  $CellContext`f[$CellContext`i]]], 
                DiracCore`ONEO[$CellContext`T2]]]]], "ExpectedMessages" -> 
          HoldForm[{}], "ActualOutput" -> HoldForm["MAYBE"], 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.050742`4.855882578806903, "CPUTimeUsed" -> 0.05123400000000089, 
          "MemoryUsed" -> 29000, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"8898212847663504099", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-237 qm_trlf\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-237 qm_trlf\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-237 qm_trlf"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-237 qm_trlf\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-237 qm_trlf\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-237 qm_trlf"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "i", "]"}], "\[SmallCircle]", "X", 
                    "\[SmallCircle]", 
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]]}], ",", "T1"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "i", "]"}], "\[SmallCircle]", "X", 
                    "\[SmallCircle]", 
                    SuperscriptBox[
                    RowBox[{"f", "[", "i", "]"}], 
                    SubscriptBox["\"\[Dagger]\"", "\"O\""]]}], ",", "T1"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`f}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                    $CellContext`DNTr[
                    SmallCircle[
                    $CellContext`f[$CellContext`i], $CellContext`X, 
                    DiracCore`ADJO[
                    $CellContext`f[$CellContext`i]]], $CellContext`T1]], 
                    $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.938588268915251*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "46fa816d-6593-46e0-9eb4-f761d8008a26", "TestID" -> 
          "COQQ-237 qm_trlf", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "a14942f5-b636-4824-b923-ae3a9cdfd1ff", "Input" -> 
          HoldForm[
            Module[{$CellContext`f}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                 DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                   Blank[]] -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
              DiracAll`DNEqQ[
                DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                 $CellContext`DNTr[
                  SmallCircle[
                   $CellContext`f[$CellContext`i], $CellContext`X, 
                   DiracCore`ADJO[
                    $CellContext`f[$CellContext`i]]], $CellContext`T1]], 
                $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.069873`4.994824387937284, "CPUTimeUsed" -> 0.07057899999999506, 
          "MemoryUsed" -> 26808, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"686089911074773130", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-238 elemso_trlf\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-238 elemso_trlf\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-238 elemso_trlf"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-238 elemso_trlf\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-238 elemso_trlf\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-238 elemso_trlf"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"elemso", "[", 
                    RowBox[{"f", ",", "i"}], "]"}], "[", "X", "]"}], ",", 
                    "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"elemso", "[", 
                    RowBox[{"f", ",", "i"}], "]"}], "[", "X", "]"}], ",", 
                    "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`f}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                    $CellContext`DNTr[
                    $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X], $CellContext`T1]], 
                    $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882689855995`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "9015fbef-e3c8-4592-858b-08cbfc6e87d9", "TestID" -> 
          "COQQ-238 elemso_trlf", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "cb3bf636-f31a-48f6-9fee-51322a3dc718", "Input" -> 
          HoldForm[
            Module[{$CellContext`f}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                 DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                   Blank[]] -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
              DiracAll`DNEqQ[
                DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                 $CellContext`DNTr[
                  $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X], $CellContext`T1]], 
                $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.069079`4.989861039848067, "CPUTimeUsed" -> 0.06962800000000158, 
          "MemoryUsed" -> 34584, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"5024017932696810121", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-239 elem_sum_trlfE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-239 elem_sum_trlfE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-239 elem_sum_trlfE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-239 elem_sum_trlfE\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-239 elem_sum_trlfE\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-239 elem_sum_trlfE"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"elemso", "[", 
                    RowBox[{"f", ",", "i"}], "]"}], "[", "X", "]"}], ",", 
                    "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "f", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M", "\[Rule]", 
                    RowBox[{"SetType", "[", "S", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "_", "]"}], "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"X", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isQMeas", "[", 
                    RowBox[{"M", ",", "f", ",", "T2"}], "]"}], ";", 
                    RowBox[{"DNEqQ", "[", 
                    RowBox[{
                    RowBox[{"SUMS", "[", 
                    RowBox[{"i", ",", "M", ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"elemso", "[", 
                    RowBox[{"f", ",", "i"}], "]"}], "[", "X", "]"}], ",", 
                    "T1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"DNTr", "[", 
                    RowBox[{"X", ",", "T2"}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`f}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                    DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                    Blank[]] -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
                    DiracAll`DNEqQ[
                    DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                    $CellContext`DNTr[
                    $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X], $CellContext`T1]], 
                    $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882690551176`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "b873b65d-e62e-43a0-b2e6-1404e86049c3", "TestID" -> 
          "COQQ-239 elem_sum_trlfE", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "7ea8920c-2a53-4988-8a84-b561e3508cf9", "Input" -> 
          HoldForm[
            Module[{$CellContext`f}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`M -> 
                 DiracSumExt`SetType[$CellContext`S], $CellContext`f[
                   Blank[]] -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`X -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isQMeas[$CellContext`M, $CellContext`f, $CellContext`T2]; 
              DiracAll`DNEqQ[
                DiracSumExt`SUMS[$CellContext`i, $CellContext`M, 
                 $CellContext`DNTr[
                  $CellContext`elemso[$CellContext`f, \
$CellContext`i][$CellContext`X], $CellContext`T1]], 
                $CellContext`DNTr[$CellContext`X, $CellContext`T2]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.068215`4.984394881299892, "CPUTimeUsed" -> 0.06872999999999507, 
          "MemoryUsed" -> 44224, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1130814315027604079", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-240 cplmt_proj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-240 cplmt_proj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-240 cplmt_proj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-240 cplmt_proj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-240 cplmt_proj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-240 cplmt_proj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"cplmt", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T", ",", "T"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isProjection", "[", "A", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"cplmt", "[", 
                    RowBox[{"A", ",", "T"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                    $CellContext`cplmt[$CellContext`A, $CellContext`T]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882691236706`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "922d9061-ded1-4bc2-82b5-1d0bdfb9a723", "TestID" -> 
          "COQQ-240 cplmt_proj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "c2e99bee-586d-4dc6-ad87-da27044e7334", "Input" -> 
          HoldForm[
            Module[{$CellContext`A}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T, $CellContext`T]}}, \
$CellContext`isProjection[$CellContext`A]; $CellContext`DNProjection[
                $CellContext`cplmt[$CellContext`A, $CellContext`T]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.156309`5.34449898249103, "CPUTimeUsed" -> 0.15734700000000146`, 
          "MemoryUsed" -> 131472, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"5406250337193438123", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-242 formlf_normal\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-242 formlf_normal\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-242 formlf_normal"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-242 formlf_normal\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-242 formlf_normal\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-242 formlf_normal"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isNormal", "[", "B", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"formlf", "[", 
                    RowBox[{"A", ",", "B"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isNormal", "[", "B", "]"}], ";", 
                    RowBox[{"DNNormal", "[", 
                    RowBox[{"formlf", "[", 
                    RowBox[{"A", ",", "B"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isNormal[$CellContext`B]; $CellContext`DNNormal[
                    $CellContext`formlf[$CellContext`A, $CellContext`B]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882693254905`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "9bbfb5f3-011a-4292-9ad1-0029c7731afc", "TestID" -> 
          "COQQ-242 formlf_normal", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "46a75196-b3c3-4a42-9ca3-d16ea75ff78c", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isNormal[$CellContext`B]; $CellContext`DNNormal[
                $CellContext`formlf[$CellContext`A, $CellContext`B]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          11.257524`7.201957879343619, "CPUTimeUsed" -> 11.42973700000001, 
          "MemoryUsed" -> 591504, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"1536249490960118271", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["TestObject",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-244 formlf_proj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-244 formlf_proj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-244 formlf_proj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{
                    InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                   PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                   GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox["\"COQQ-244 formlf_proj\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"COQQ-244 formlf_proj\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["COQQ-244 formlf_proj"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"FailureType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"SameTestFailure\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"SameTestFailure\"", "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["SameTestFailure"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isProjection", "[", "B", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"formlf", "[", 
                    RowBox[{"A", ",", "B"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"A", ",", "B"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DiracCtx", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"A", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T1", ",", "T2"}], "]"}]}], ",", 
                    RowBox[{"B", "\[Rule]", 
                    RowBox[{"OType", "[", 
                    RowBox[{"T2", ",", "T2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"isIsometry", "[", 
                    RowBox[{"A", ",", "T2"}], "]"}], ";", 
                    RowBox[{"isProjection", "[", "B", "]"}], ";", 
                    RowBox[{"DNProjection", "[", 
                    RowBox[{"formlf", "[", 
                    RowBox[{"A", ",", "B"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                     "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    Module[{$CellContext`A, $CellContext`B}, 
                    
                    Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                    DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                    DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isProjection[$CellContext`B]; $CellContext`DNProjection[
                    $CellContext`formlf[$CellContext`A, $CellContext`B]]]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "\"MAYBE\"", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "\"MAYBE\"", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["MAYBE"]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        TestObject[<|
         "MetaInformation" -> None, "AbsoluteTime" -> 3.9385882806566358`*^9, 
          "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
          "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
          DirectedInfinity[1], "CreationID" -> 
          "bc71de5e-fe33-4774-9741-a9a0cb94967c", "TestID" -> 
          "COQQ-244 formlf_proj", "TestFileName" -> 
          "/Users/xuyingte/projects/DiracDec/Mathematica/ExampleList.nb", 
          "EvaluationID" -> "98f58596-ae57-42c5-95e8-d93844c56345", "Input" -> 
          HoldForm[
            Module[{$CellContext`A, $CellContext`B}, 
             
             Block[{DiracCore`DiracCtx = {$CellContext`A -> 
                 DiracCore`OType[$CellContext`T1, $CellContext`T2], \
$CellContext`B -> 
                 DiracCore`OType[$CellContext`T2, $CellContext`T2]}}, \
$CellContext`isIsometry[$CellContext`A, $CellContext`T2]; \
$CellContext`isProjection[$CellContext`B]; $CellContext`DNProjection[
                $CellContext`formlf[$CellContext`A, $CellContext`B]]]]], 
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
          HoldForm["MAYBE"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          0.263923`5.571992237001749, "CPUTimeUsed" -> 0.26596399999999676`, 
          "MemoryUsed" -> -16056, "IntermediateTestsTree" -> {}, 
          "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Failure", 
          "FailureType" -> "SameTestFailure"|>],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithMessages\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithErrors\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.938162721922469*^9, 3.938395856905445*^9, 
  3.938589163592215*^9},
 CellLabel->
  "Out[543]=",ExpressionUUID->"fb3f4dd8-7be3-44a5-9a78-d9202755afe6"]
}, Open  ]],

Cell["Select the CoqQ results.", "Text",
 CellChangeTimes->{{3.938397856605956*^9, 
  3.938397867225836*^9}},ExpressionUUID->"a45b4b7a-85df-4e75-bbcf-\
7e2de032f9aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coqqRes", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"testRes", "[", "\"\<Results\>\"", "]"}], ",", 
     RowBox[{
      RowBox[{"StringStartsQ", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<TestID\>\"", "]"}], ",", "\"\<COQQ\>\""}], 
       "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.938397715941216*^9, 3.938397736036227*^9}, {
  3.938397771651535*^9, 3.938397788404331*^9}, {3.938397824485573*^9, 
  3.9383978391051188`*^9}, {3.938397869415018*^9, 3.938397875689441*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"0427cc2e-9158-4a88-a38d-d02a32661edd"],

Cell["\<\
Extract the times used for each examples. Most examples take less than one \
second.\
\>", "Text",
 CellChangeTimes->{{3.937550656809286*^9, 
  3.9375508645747337`*^9}},ExpressionUUID->"9a0a3237-9ba7-47a5-855d-\
adaaa17b0915"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeUsed", "=", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<TestID\>\"", "]"}], "->", 
      RowBox[{"#", "[", "\"\<AbsoluteTimeUsed\>\"", "]"}]}], "&"}], "/@", 
    "coqqRes"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.937542272102736*^9, 3.937542376615383*^9}, {
  3.937542430597857*^9, 3.9375424681001863`*^9}, {3.937542508644193*^9, 
  3.937542521171979*^9}, {3.938397883097476*^9, 3.938397886514123*^9}},
 CellLabel->
  "In[545]:=",ExpressionUUID->"4713518a-2240-4d23-9c45-b7530fd06464"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"COQQ-DEMO-1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.008535`4.081718523282746", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-DEMO-2\"\>", "\[Rule]", 
    TemplateBox[{
     "0.101689`5.157788974376413", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-DEMO-3\"\>", "\[Rule]", 
    TemplateBox[{
     "0.183884`5.415058940153214", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-DEMO-4\"\>", "\[Rule]", 
    TemplateBox[{
     "0.032053`4.656383681373947", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-DEMO-5\"\>", "\[Rule]", 
    TemplateBox[{
     "0.081639`5.06241267421481", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-1 lftrace_baseE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.014282`4.305304026570743", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-2 lftraceC\"\>", "\[Rule]", 
    TemplateBox[{
     "0.053239`4.876744887261217", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-3 lftrace_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.048449`4.835799815359875", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-4 lftrace_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.017191`4.385816138151985", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-5 lftrace_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.019641`4.443678593473653", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-6 lftrace_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.023318`4.518206295796652", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-7 outp_trlf\"\>", "\[Rule]", 
    TemplateBox[{
     "0.014679`4.317211468311595", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-8 sumeb_out\"\>", "\[Rule]", 
    TemplateBox[{
     "0.0089520000000000001`4.102435071352288", "\"s\"", "seconds", 
      "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-9 delta_lf_eb\"\>", "\[Rule]", 
    TemplateBox[{
     "0.002005`3.452629374788195", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-10 comp_delta_lf_cond\"\>", "\[Rule]", 
    TemplateBox[{
     "0.002014`3.454574464049593", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-11 comp_delta_lf\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000707`2.9999344116288933", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-12 trlf_deltar\"\>", "\[Rule]", 
    TemplateBox[{
     "0.00506`3.854665514671793", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-13 lfun_sum_delta\"\>", "\[Rule]", 
    TemplateBox[{
     "0.023948`4.529784247305641", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-14 onb_dot(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001029`3.162930372594427", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-15 onb_vec(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.010913`4.188459153035093", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-16 outp_complV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.043525`4.789253777621363", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-17 outp_comprV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.047598`4.828103702501815", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-18 onb_lfun(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.027988`4.597486863072097", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-19 sumonb_out_bool(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.005327`3.8769976946168234", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-20 ponb_ns(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000382`2.732578360743702", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-21 linear_tensmx\"\>", "\[Rule]", 
    TemplateBox[{
     "0.076013`5.0314028709740075", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-22 linear_tensmxr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.077736`5.041137187553777", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-23 adjmx_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.06121`4.937337377331182", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-24 mxtrace_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.03257`4.663332756396867", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-25 tr_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.022317`4.499150811260039", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-26 mxswapK\"\>", "\[Rule]", 
    TemplateBox[{
     "0.042774`4.781694862928627", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-27 mxswap_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.082245`5.065624502771156", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-28 mxswap_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.066376`4.972526074915272", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-29 mxswap_trace\"\>", "\[Rule]", 
    TemplateBox[{
     "0.023098`4.51408937484244", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-30 mxswap_mul\"\>", "\[Rule]", 
    TemplateBox[{
     "0.122561`5.2388672936315395", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-31 mxswap_trmx\"\>", "\[Rule]", 
    TemplateBox[{
     "0.082779`5.068435173495369", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-32 mxswap_trmxC\"\>", "\[Rule]", 
    TemplateBox[{
     "0.080757`5.0576951750223", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-33 ptrace2E1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.053132`4.875871161805271", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-34 ptrace1E2\"\>", "\[Rule]", 
    TemplateBox[{
     "0.052138`4.867669365561446", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-35 ptrace2_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.062943`4.94946243632016", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-36 ptrace1_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.061849`4.941847680002586", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-37 tr_ptrace2\"\>", "\[Rule]", 
    TemplateBox[{
     "0.0221`4.494907271517105", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-38 tr_ptrace1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.021803`4.48903125262036", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-39 ptrace1_mul_tens1mx\"\>", "\[Rule]", 
    TemplateBox[{
     "0.081538`5.061875052512319", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-40 tensmx11\"\>", "\[Rule]", 
    TemplateBox[{
     "0.012725`4.25517278884079", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-41 tensmxE_mid\"\>", "\[Rule]", 
    TemplateBox[{
     "0.026139`4.567803966585731", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-42 tens_delta_mx1_mulEl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.008756`4.092820750727888", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-43 tens_delta_mx1_mulEr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.008218`4.065281134757846", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-44 diag_mx_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.035228`4.697402985503173", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-45 ptrace2_mulmxI\"\>", "\[Rule]", 
    TemplateBox[{
     "0.078497`5.045368057018747", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-46 mulmx_diag_colrow\"\>", "\[Rule]", 
    TemplateBox[{
     "0.102734`5.1622291957495845", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-47 cplmtE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.046355`4.816611583244425", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-48 cplmtK\"\>", "\[Rule]", 
    TemplateBox[{
     "0.022887`4.510103867447028", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-49 cplmt1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.008563`4.0831409418537765", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-50 cplmt0\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001181`3.2227648954455086", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-51 formlf_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.141446`5.301105668235888", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-52 formlf_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.071602`5.005440151101203", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-53 formlf1E\"\>", "\[Rule]", 
    TemplateBox[{
     "0.056082`4.8993384909053574", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-54 formlf1EV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.050252`4.851668348933057", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-55 formlfE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.072331`5.009839467235481", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-56 formlfEV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.070662`4.999700923269789", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-57 formlf_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.108442`5.185712516524231", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-58 superop_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.137999`5.290390937160366", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-59 addsoA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.417963`5.771652835571011", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-60 addsoC\"\>", "\[Rule]", 
    TemplateBox[{
     "0.251912`5.551763853736829", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-61 add0so\"\>", "\[Rule]", 
    TemplateBox[{
     "0.091087`5.1099713964171345", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-62 addNso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.002448`3.5393264113055176", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-63 scale1so\"\>", "\[Rule]", 
    TemplateBox[{
     "0.088609`5.09799283317085", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-64 scalesoDl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.113583`5.2058283330919135", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-65 scalesoDr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.280904`5.599072921318226", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-66 scalesoA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.103623`5.1659711592687705", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-67 abort_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.00029`2.61291299573095", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-68 add_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.262066`5.568925677801097", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-69 opp_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.094995`5.1282157449149945", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-70 sum_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.139113`5.293882714196847", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-71 scale_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.093247`5.1201498661475275", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-72 comp_soElr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.200735`5.453138100173155", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-73 comp_soErl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.1965`5.443877552543439", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-74 id_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.02195`4.491949522410134", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-75 comp_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.198665`5.448636359427202", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-76 comp_sorE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.198507`5.44829082383174", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-77 comp_soA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.393719`5.745701371210111", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-78 comp_sorA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.39373`5.745713504667138", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-79 linear_comp_so\"\>", "\[Rule]", 
    TemplateBox[{
     "0.553956`5.893990268488071", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-80 linear_compr_so\"\>", "\[Rule]", 
    TemplateBox[{
     "0.562077`5.900310812305772", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-81 linear_comp_sor\"\>", "\[Rule]", 
    TemplateBox[{
     "0.552284`5.892677459465298", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-82 linear_compr_sor\"\>", "\[Rule]", 
    TemplateBox[{
     "0.556599`5.896057419566144", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-83 comp_so1l\"\>", "\[Rule]", 
    TemplateBox[{
     "0.08671`5.08858418405538", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-84 comp_so1r\"\>", "\[Rule]", 
    TemplateBox[{
     "0.086424`5.087149360914886", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-85 comp_so0l\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000342`2.6845411038881286", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-86 comp_so0r\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000922`3.1152459188856234", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-87 comp_soDl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.547259`5.888707910361953", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-88 comp_soDr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.534933`5.878814388166405", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-89 comp_soNl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.208936`5.470528273879023", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-90 comp_soNr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.21014`5.473023725753502", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-91 comp_soZl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.210715`5.474210450314108", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-92 comp_soZr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.21098`5.4747562858248635", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-93 comp_soPl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.564105`5.901874946986187", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-94 comp_soPr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.557987`5.897139078679908", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-95 comp_sor1l\"\>", "\[Rule]", 
    TemplateBox[{
     "0.086835`5.089209806454479", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-96 comp_sor1r\"\>", "\[Rule]", 
    TemplateBox[{
     "0.087188`5.090971713356217", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-97 comp_sor0l\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000936`3.121790846570099", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-98 comp_sor0r\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000295`2.6203370138101567", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-99 comp_sorDl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.539591`5.882579695164452", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-100 comp_sorDr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.545934`5.8876551402283965", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-101 comp_sorNl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.207222`5.466950858805778", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-102 comp_sorNr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.208692`5.470020798970053", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-103 comp_sorZl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.209085`5.470837874978222", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-104 comp_sorZr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.213143`5.4791860720363825", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-105 comp_sorPl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.55715`5.896487132686518", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-106 comp_sorPr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.564108`5.90187725662709", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-107 comp_soACA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.821558`6.065153226821316", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-108 comp_sorACA\"\>", "\[Rule]", 
    TemplateBox[{
     "0.824266`6.066582383910174", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-109 krausso_fun_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.133795`5.276954881719826", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-110 kraussoE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.090225`5.105841888563539", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-111 formsoE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.069707`4.993791390115459", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-112 formso0\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000732`3.015026078890386", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-113 ifso_fun_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.674779`5.979676556150334", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-114 ifsoE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.250871`5.549965458796289", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-115 formso1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.042085`4.774642329343911", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-116 comp_krausso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.196934`5.44483569994096", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-117 compr_krausso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.20354`5.459164768013379", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-118 ifso_krausso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.52295`5.868975165165521", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-119 scaleso_krausso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.105018`5.171778741003803", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-120 choimxE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.264661`5.57320494694342", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-121 choi2so_fun_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.258419`5.5628394393988625", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-122 choi2so_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.092601`5.117130674493809", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-123 so2choiK\"\>", "\[Rule]", 
    TemplateBox[{
     "0.258174`5.562427501350752", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-124 choi2soK\"\>", "\[Rule]", 
    TemplateBox[{
     "0.046652`4.819385264785789", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-125 so2choi_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.250895`5.550007004327766", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-126 choi2so_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "0.260239`5.565887379279645", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-127 tr_choi_sep\"\>", "\[Rule]", 
    TemplateBox[{
     "0.141491`5.301243813843216", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-128 krausso2choiE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.184224`5.415861205607033", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-129 dualsoK\"\>", "\[Rule]", 
    TemplateBox[{
     "6.1223929999999999999`6.9374362016057765", "\"s\"", "seconds", 
      "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-130 dualso_trlfE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.789352`6.047785711519387", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-131 dualso_trlfEV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.651181`5.964216718159796", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-132 dualso_krausE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.402995`5.7558146556706715", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-133 dualso_formE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.33807`5.679521631441528", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-134 dualso_krausso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.402028`5.754771299229952", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-135 dualso_formso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.329211`5.667989335792301", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-136 dualso_is_linear\"\>", "\[Rule]", 
    TemplateBox[{
     "1.87363`6.423198829408568", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-137 formso_dual\"\>", "\[Rule]", 
    TemplateBox[{
     "0.335923`5.676754737997326", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-138 abortso_formE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000776`3.0403767190901823", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-139 dualso0\"\>", "\[Rule]", 
    TemplateBox[{
     "0.108577`5.186252835690935", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-140 idso_formE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.042795`4.781908028544751", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-141 dualso1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.190542`5.430505717254584", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-142 unitaryso1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.04343`4.7883048271942235", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-143 dualso_unitary\"\>", "\[Rule]", 
    TemplateBox[{
     "0.739581`6.019500743340833", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-144 initialsoE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.049194`4.84242713462796", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-145 initialso_onb(CB)\"\>", "\[Rule]", 
    TemplateBox[{
     "0.049237`4.842806581426426", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-146 dualso_initialE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.278928`5.5960071106463545", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-147 dualso_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "3.295318`6.668412328440747", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-148 dualso_compr\"\>", "\[Rule]", 
    TemplateBox[{
     "3.324099`6.672188947514901", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-149 elemso_sum\"\>", "\[Rule]", 
    TemplateBox[{
     "0.08939`5.1018039351096665", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-150 ifso_elemE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.253485`5.554467262842689", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-151 ifso_elem\"\>", "\[Rule]", 
    TemplateBox[{
     "0.248353`5.545584408289979", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-152 dualso_if\"\>", "\[Rule]", 
    TemplateBox[{
     "5.086759`6.856956159986741", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-153 dualqmE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.397457`5.749805147999651", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-154 dualqm_trlfE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.155735`5.342901225035146", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-155 dualqm_trlfEV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.135612`5.282813118802549", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-156-1 ifso_boolE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.643177`5.95884550348582", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-156-2 ifso_boolE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.714873`6.004743892362867", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-157-1 ifso_bool\"\>", "\[Rule]", 
    TemplateBox[{
     "0.641686`5.957837561996064", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-157-2 ifso_bool\"\>", "\[Rule]", 
    TemplateBox[{
     "0.703715`5.997911806139195", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-158 abortso_eq0\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000297`2.6232714471492065", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-159 formso_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.143161`5.306339721169443", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-160 formlf_soE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.07062`4.999442711059072", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-161 hermlf_normal\"\>", "\[Rule]", 
    TemplateBox[{
     "0.041915`4.772884468326729", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-162 projlf_herm\"\>", "\[Rule]", 
    TemplateBox[{
     "0.022598`4.504585002138722", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-163 projlf_normal\"\>", "\[Rule]", 
    TemplateBox[{
     "0.022885`4.510065914595312", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-164 isolf_normal\"\>", "\[Rule]", 
    TemplateBox[{
     "0.041471`4.768259505567503", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-165 isolf_giso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.040714`4.760258770134979", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-166 gisolf_iso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001187`3.224965716786585", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-167 unitarylf_iso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000954`3.130063372536089", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-168 unitarylf_giso\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001766`3.3975056970735436", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-169 isolf_unitary\"\>", "\[Rule]", 
    TemplateBox[{
     "0.040237`4.755140590853651", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-170 gisolf_unitary\"\>", "\[Rule]", 
    TemplateBox[{
     "0.00178`3.400935000140888", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-171 is_unitarylf\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001728`3.388058735974868", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-172 isofK\"\>", "\[Rule]", 
    TemplateBox[{
     "0.029596`4.621748016481639", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-173 isofE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000921`3.1147746280288424", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-174 isofKE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.046977`4.822400276662543", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-175 gisofKl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.028381`4.603542691519716", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-176 gisofKr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.029431`4.619320016544029", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-177 gisofEl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000952`3.129151946216468", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-178 gisofEr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001103`3.1930905102721847", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-179 gisofKEl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.046967`4.822307818499479", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-180 gisofKEr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.047205`4.824502999800896", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-181 unitaryfKl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.029877`4.6258519849226145", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-182 unitaryfKr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.03083`4.639488522558502", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-183 unitaryfEl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000928`3.118062974050856", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-184 unitaryfEr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000878`3.0940095137380963", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-185 unitaryfKEl\"\>", "\[Rule]", 
    TemplateBox[{
     "0.044609`4.799937485602872", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-186 unitaryfKEr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.044682`4.800647602059007", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-187 hermlf_adjE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.02167`4.486373909151812", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-188 hermf_adjE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.021866`4.4902843416007245", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-189 projlf_idem\"\>", "\[Rule]", 
    TemplateBox[{
     "0.021816`4.489290122765567", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-190 projf_idem\"\>", "\[Rule]", 
    TemplateBox[{
     "0.021964`4.492226432869333", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-191 projlf_idemE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.052281`4.8688588837475475", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-192 projf_idemE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.052026`4.866735434439024", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-193 hermlf_dotE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.031084`4.643051898120127", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-194 hermf_dotE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.031586`4.650009628867891", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-195 projlf_dot\"\>", "\[Rule]", 
    TemplateBox[{
     "0.062817`4.948592189452636", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-196 projf_dot\"\>", "\[Rule]", 
    TemplateBox[{
     "0.061193`4.937216742931048", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-197 projlf0\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000693`2.991248232443801", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-198 projlf1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.012127`4.234268375402005", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-199 unitarylf1\"\>", "\[Rule]", 
    TemplateBox[{
     "0.022031`4.493549208311192", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-200 normallfZ\"\>", "\[Rule]", 
    TemplateBox[{
     "0.514049`5.861519516468006", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-201 hermlfD\"\>", "\[Rule]", 
    TemplateBox[{
     "0.028088`4.599035814289289", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-202 isolf_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.085111`5.080500691060827", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-203 gisolf_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.171234`5.384104999682051", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-204 unitarylf_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.161317`5.35819513470117", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-205 normalf_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.348775`5.693060345218776", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-206 normalf_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.442174`5.796108200144116", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-207 normalf_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.428763`5.782732298795763", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-208 normalfZ\"\>", "\[Rule]", 
    TemplateBox[{
     "0.53854`5.881732963839471", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-209 normalfN\"\>", "\[Rule]", 
    TemplateBox[{
     "0.360349`5.707238319023946", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-210 hermf_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.02253`4.503276189555825", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-211 hermf_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.045128`4.804961084549332", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-212 hermf_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.045965`4.812942262284721", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-213 hermfD\"\>", "\[Rule]", 
    TemplateBox[{
     "0.028254`4.60159493865836", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-214 hermfN\"\>", "\[Rule]", 
    TemplateBox[{
     "0.024687`4.542983314875848", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-215 projf_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.044126`4.795209558484208", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-216 projf_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.108741`5.186908320359053", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-217 projf_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.109282`5.189063632385187", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-218 isof_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.063732`4.954872545298756", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-219 isof_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.085973`5.084877079399999", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-220 gisof_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.083837`5.073950727076173", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-221 gisof_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.122903`5.240077481756237", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-222 gisof_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.126211`5.251612205601545", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-223 gisof_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.16832`5.376650720305639", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-224 unitaryf_comp\"\>", "\[Rule]", 
    TemplateBox[{
     "0.158605`5.350831872100978", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-225 unitaryf_adj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.080535`5.056499660850912", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-226 unitaryf_conj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.120358`5.230989960248487", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-227 unitaryf_tr\"\>", "\[Rule]", 
    TemplateBox[{
     "0.116814`5.218009893334272", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-228 unitaryf_form\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001074`3.181519279195531", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-229 unitaryf_formV\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000911`3.1100333748049924", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-230 isolf_ns\"\>", "\[Rule]", 
    TemplateBox[{
     "0.063659`4.954374809969742", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-231 unitarymx_tens\"\>", "\[Rule]", 
    TemplateBox[{
     "0.172533`5.3873871717179105", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-232 isof_dot\"\>", "\[Rule]", 
    TemplateBox[{
     "0.056949`4.906001100289345", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-233 isofA_dot\"\>", "\[Rule]", 
    TemplateBox[{
     "0.057411`4.909510109421778", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-234 gisofA_dot\"\>", "\[Rule]", 
    TemplateBox[{
     "0.056877`4.905451679122521", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-235 unitary_rowMcol\"\>", "\[Rule]", 
    TemplateBox[{
     "0.024238`4.535011778969863", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-236 qmeasure_tpE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.050742`4.855882578806903", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-237 qm_trlf\"\>", "\[Rule]", 
    TemplateBox[{
     "0.069873`4.994824387937284", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-238 elemso_trlf\"\>", "\[Rule]", 
    TemplateBox[{
     "0.069079`4.989861039848067", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-239 elem_sum_trlfE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.068215`4.984394881299892", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-240 cplmt_proj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.156309`5.34449898249103", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-241 normalfE\"\>", "\[Rule]", 
    TemplateBox[{
     "0.044645`4.8002878251326715", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-242 formlf_normal\"\>", "\[Rule]", 
    TemplateBox[{
     "11.257524`7.201957879343619", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-243 formlf_herm\"\>", "\[Rule]", 
    TemplateBox[{
     "0.072652`5.011762572102762", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-244 formlf_proj\"\>", "\[Rule]", 
    TemplateBox[{
     "0.263923`5.571992237001749", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-245\"\>", "\[Rule]", 
    TemplateBox[{
     "0.00626`3.9470893310424233", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-246\"\>", "\[Rule]", 
    TemplateBox[{
     "0.005995`3.9283041852668616", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-247\"\>", "\[Rule]", 
    TemplateBox[{
     "0.008703`4.09018398135432", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-248\"\>", "\[Rule]", 
    TemplateBox[{
     "0.005629`3.9009462464921962", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-249\"\>", "\[Rule]", 
    TemplateBox[{
     "0.053826`4.881507104891339", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-250\"\>", "\[Rule]", 
    TemplateBox[{
     "0.034287`4.685644485267059", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-251\"\>", "\[Rule]", 
    TemplateBox[{
     "0.02901`4.613062726634658", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-252\"\>", "\[Rule]", 
    TemplateBox[{
     "0.037657`4.726360716185439", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-253\"\>", "\[Rule]", 
    TemplateBox[{
     "0.049301`4.8433707262385814", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-254\"\>", "\[Rule]", 
    TemplateBox[{
     "0.023124`4.514577958535072", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-255\"\>", "\[Rule]", 
    TemplateBox[{
     "0.013088`4.267388284159242", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-256\"\>", "\[Rule]", 
    TemplateBox[{
     "0.001672`3.3737512709349917", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-257\"\>", "\[Rule]", 
    TemplateBox[{
     "0.005264`3.871830878437893", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-258\"\>", "\[Rule]", 
    TemplateBox[{
     "0.000704`2.9980876569741057", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-259\"\>", "\[Rule]", 
    TemplateBox[{
     "0.035602`4.701989393685941", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-260\"\>", "\[Rule]", 
    TemplateBox[{
     "0.030849`4.63975608835617", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-261\"\>", "\[Rule]", 
    TemplateBox[{
     "0.032966`4.668581252123602", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-262\"\>", "\[Rule]", 
    TemplateBox[{
     "0.017999`4.4057633747938505", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-263\"\>", "\[Rule]", 
    TemplateBox[{
     "0.024382`4.537584324764015", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-264\"\>", "\[Rule]", 
    TemplateBox[{
     "0.016983`4.38052940743625", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-265\"\>", "\[Rule]", 
    TemplateBox[{
     "0.016977`4.380375946486985", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-266\"\>", "\[Rule]", 
    TemplateBox[{
     "0.017491`4.393329637617524", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-267\"\>", "\[Rule]", 
    TemplateBox[{
     "0.02705`4.582682267274582", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-268\"\>", "\[Rule]", 
    TemplateBox[{
     "0.056524`4.9027478855530875", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-269\"\>", "\[Rule]", 
    TemplateBox[{
     "0.020189`4.455629805867389", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-270\"\>", "\[Rule]", 
    TemplateBox[{
     "0.013852`4.292027480709417", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-271\"\>", "\[Rule]", 
    TemplateBox[{
     "0.05212`4.8675194048725405", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-272\"\>", "\[Rule]", 
    TemplateBox[{
     "0.074502`5.022682929336059", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-273\"\>", "\[Rule]", 
    TemplateBox[{
     "0.065642`4.967696802628215", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-274\"\>", "\[Rule]", 
    TemplateBox[{
     "0.061728`4.940997203795784", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-275\"\>", "\[Rule]", 
    TemplateBox[{
     "0.061365`4.938435736386049", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-276\"\>", "\[Rule]", 
    TemplateBox[{
     "0.053703`4.8805135451154165", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-277\"\>", "\[Rule]", 
    TemplateBox[{
     "0.052949`4.874372760224829", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-278\"\>", "\[Rule]", 
    TemplateBox[{
     "0.049167`4.842188707785902", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-279\"\>", "\[Rule]", 
    TemplateBox[{
     "0.048729`4.8383024968607735", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-280\"\>", "\[Rule]", 
    TemplateBox[{
     "0.067231`4.978084568870326", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-281\"\>", "\[Rule]", 
    TemplateBox[{
     "0.06466`4.961150698107531", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-282\"\>", "\[Rule]", 
    TemplateBox[{
     "0.102325`5.160496751149302", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"COQQ-283\"\>", "\[Rule]", 
    TemplateBox[{
     "0.025699`4.56043122221654", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.937542361664869*^9, 3.937542377123736*^9}, 
   3.937542468565028*^9, {3.9375425134463043`*^9, 3.9375425220071983`*^9}, 
   3.938397687009431*^9, 3.938397887216879*^9, 3.9385891734293213`*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"5dba61b6-3b3f-4c03-8267-1934af7a380f"]
}, Open  ]],

Cell["Analyses the data.", "Text",
 CellChangeTimes->{{3.93839792525597*^9, 
  3.938397932848247*^9}},ExpressionUUID->"1af5b344-4424-4a5d-b0e0-\
d0386965bf3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeData", "=", 
   RowBox[{"Values", "[", "timeUsed", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.938397937785944*^9, 3.93839799914253*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"0ea2791e-6d53-4825-bdf6-45080ed1cbe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "timeData", "]"}]], "Input",
 CellChangeTimes->{{3.938398041301946*^9, 3.938398043390992*^9}},
 CellLabel->
  "In[547]:=",ExpressionUUID->"16c2cdbe-1c8f-4d71-8cda-c509c43530b2"],

Cell[BoxData[
 TemplateBox[{
  "0.2379917931034482759`5.527076978958505", "\"s\"", "seconds", 
   "\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.938398043829784*^9, 3.938589183338187*^9},
 CellLabel->
  "Out[547]=",ExpressionUUID->"c171ccef-fa5c-4088-b4a4-2725f3b38631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "timeData", "]"}]], "Input",
 CellChangeTimes->{{3.938398424921846*^9, 3.938398426970972*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"55036209-def2-4ba5-9740-69b6c03e5ba5"],

Cell[BoxData[
 TemplateBox[{
  "11.257524`7.201957879343619", "\"s\"", "seconds", "\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9383984277416267`*^9, 3.938589186351715*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"0ed970dc-e47d-400f-80fb-660bcd7a82f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantile", "[", 
  RowBox[{"timeData", ",", 
   RowBox[{"{", 
    RowBox[{"0.25", ",", "0.5", ",", "0.75", ",", "0.9"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.938398071618369*^9, 3.938398075455291*^9}, {
  3.938398513323394*^9, 3.938398515405921*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"55fc48a4-a908-40b5-8e09-9de60e23b4e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "0.023948`4.529784247305641", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.061728`4.940997203795784", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.184224`5.415861205607033", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.52295`5.868975165165521", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.938398072230277*^9, 3.938398076535626*^9}, 
   3.9383985166144657`*^9, 3.9385891883365507`*^9},
 CellLabel->
  "Out[549]=",ExpressionUUID->"e5ca6b3f-a054-4beb-bbd9-465265c03f95"]
}, Open  ]],

Cell["\<\
Some  \"computational\"  examples  take  more  time  because  the AC \
(associative and commutative)  matching  is costly with long sequences. Here \
is an example demonstrating the phenomenon.\
\>", "Text",
 CellChangeTimes->{{3.937550866313612*^9, 
  3.937550988944733*^9}},ExpressionUUID->"893df867-7fd1-498e-9ed8-\
486c16a16b43"],

Cell["\<\
If binary operator Op is not AC, the matching is very efficient.\
\>", "Text",
 CellChangeTimes->{{3.9375509604632483`*^9, 
  3.9375510126030273`*^9}},ExpressionUUID->"cd92dad1-eb8a-47c8-9dff-\
d30d05becf0a"],

Cell[BoxData[
 RowBox[{"ClearAttributes", "[", 
  RowBox[{"Op", ",", 
   RowBox[{"{", 
    RowBox[{"Orderless", ",", " ", "Flat"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.937543440603364*^9, 3.937543446934091*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"904ef541-6ab9-41c3-aded-d129b3b3622a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
   "a", "~", "Op", "~", "b", "~", "Op", "~", "c", "~", "Op", "~", "d", "~", 
    "Op", "~", "e", "~", "Op", "~", "f", "~", "Op", "~", "g", "~", "Op", "~", 
    "a", "~", "Op", "~", "c", "~", "Op", "~", "d", "~", "Op", "~", "a", "~", 
    "Op", "~", "c"}], ")"}], "/.", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x_", "~", "Op", "~", "x_", "~", "Op", "~", "x_"}], ")"}], "->", 
   "x"}]}]], "Input",
 CellChangeTimes->{{3.937542954698755*^9, 3.937543000860117*^9}, {
  3.937543046926563*^9, 3.937543082531291*^9}, {3.937543118721133*^9, 
  3.937543118859265*^9}, {3.937543177938847*^9, 3.937543187017519*^9}, {
  3.93754324857905*^9, 3.937543333432905*^9}, {3.937543426897727*^9, 
  3.937543436464879*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"bdb84cbc-2515-40aa-ad32-0c7c1accfd68"],

Cell[BoxData[
 RowBox[{"Op", "[", 
  RowBox[{
   RowBox[{"Op", "[", 
    RowBox[{
     RowBox[{"Op", "[", 
      RowBox[{
       RowBox[{"Op", "[", 
        RowBox[{
         RowBox[{"Op", "[", 
          RowBox[{
           RowBox[{"Op", "[", 
            RowBox[{
             RowBox[{"Op", "[", 
              RowBox[{
               RowBox[{"Op", "[", 
                RowBox[{
                 RowBox[{"Op", "[", 
                  RowBox[{
                   RowBox[{"Op", "[", 
                    RowBox[{
                    RowBox[{"Op", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], ",", "c"}], "]"}], ",", 
                   "d"}], "]"}], ",", "e"}], "]"}], ",", "f"}], "]"}], ",", 
             "g"}], "]"}], ",", "a"}], "]"}], ",", "c"}], "]"}], ",", "d"}], 
      "]"}], ",", "a"}], "]"}], ",", "c"}], "]"}]], "Output",
 CellChangeTimes->{{3.937543180616831*^9, 3.937543187302352*^9}, 
   3.937543270918679*^9, {3.937543302944671*^9, 3.937543337649084*^9}, 
   3.937543377208605*^9, 3.937543449793474*^9, 3.937551014449905*^9, {
   3.937551052283472*^9, 3.9375510546916428`*^9}},
 CellLabel->
  "Out[154]=",ExpressionUUID->"1f81042e-b289-488a-80ac-4cefc68c1036"]
}, Open  ]],

Cell["If Op is AC, the matching takes a lot of time.", "Text",
 CellChangeTimes->{{3.937551016740254*^9, 
  3.937551033686404*^9}},ExpressionUUID->"65d4f6c2-6626-4c14-9ff3-\
94d14b277397"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Op", ",", 
   RowBox[{"{", 
    RowBox[{"Orderless", ",", " ", "Flat"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.937543219375471*^9, 3.9375432434580936`*^9}, 
   3.9375432767221537`*^9, {3.937543307095743*^9, 3.93754331176068*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"9e5621da-c900-4045-8f41-3f85572e06cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
   "a", "~", "Op", "~", "b", "~", "Op", "~", "c", "~", "Op", "~", "d", "~", 
    "Op", "~", "e", "~", "Op", "~", "f", "~", "Op", "~", "g", "~", "Op", "~", 
    "a", "~", "Op", "~", "c", "~", "Op", "~", "d", "~", "Op", "~", "a", "~", 
    "Op", "~", "c"}], ")"}], "/.", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x_", "~", "Op", "~", "x_", "~", "Op", "~", "x_"}], ")"}], "->", 
   "x"}]}]], "Input",
 CellChangeTimes->{{3.937542954698755*^9, 3.937543000860117*^9}, {
  3.937543046926563*^9, 3.937543082531291*^9}, {3.937543118721133*^9, 
  3.937543118859265*^9}, {3.937543177938847*^9, 3.937543187017519*^9}, {
  3.93754324857905*^9, 3.937543333432905*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"f044267b-585f-4b12-ab5a-d06b00726d2b"],

Cell[BoxData[
 RowBox[{"Op", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "d", ",", "e", ",", "f", ",", "g"}],
   "]"}]], "Output",
 CellChangeTimes->{{3.937543180616831*^9, 3.937543187302352*^9}, 
   3.937543270918679*^9, {3.937543302944671*^9, 3.937543337649084*^9}, 
   3.937543456101521*^9, 3.937551039879018*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"2d4f9da8-18a8-4efe-9686-c5250fa2c8a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1023, 865},
WindowMargins->{{322, Automatic}, {-225, Automatic}},
Visible->True,
TaggingRules-><|"TryRealOnly" -> False|>,
TrackCellChangeTimes->True,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ba2d6fdf-5b29-4012-bd7e-1d1b28c68824"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 162, 3, 98, "Title",ExpressionUUID->"51c1fddf-362a-4bef-ad37-aebbaceb35e2"],
Cell[587, 20, 378, 8, 58, "Text",ExpressionUUID->"b969a5b0-bfcb-4797-9168-a9180c110485"],
Cell[968, 30, 402, 10, 72, "Code",ExpressionUUID->"a5e2e0ba-be8e-4f23-bcf2-a6f36d88fa79"],
Cell[1373, 42, 44369, 1359, 3696, "Code",ExpressionUUID->"64fe095f-946d-4b97-8c22-48a8455cbf3e"],
Cell[CellGroupData[{
Cell[45767, 1405, 93, 0, 69, "Chapter",ExpressionUUID->"2626d21b-c251-4ca4-b373-f264b30e545d"],
Cell[45863, 1407, 251, 6, 35, "Text",ExpressionUUID->"1ce63845-f41f-4d0f-bcc1-ed4aa806b2e5"],
Cell[46117, 1415, 1647, 54, 80, "Input",ExpressionUUID->"dfe93b1a-0c7d-4bc1-aa6d-fac44f9a9034"],
Cell[47767, 1471, 195, 3, 35, "Text",ExpressionUUID->"036f0e92-583d-4966-a817-e41cfbcd537f"],
Cell[CellGroupData[{
Cell[47987, 1478, 581, 16, 30, "Input",ExpressionUUID->"4ce2a631-6c76-4cea-874b-2eb9fcf50a51"],
Cell[48571, 1496, 152, 2, 34, "Output",ExpressionUUID->"bfda689b-99f4-4a61-a83a-a4bb47ec86eb"]
}, Open  ]],
Cell[48738, 1501, 177, 3, 35, "Text",ExpressionUUID->"9043805c-3839-42fc-af4f-06fd29b1d625"],
Cell[CellGroupData[{
Cell[48940, 1508, 303, 7, 30, "Input",ExpressionUUID->"b7e773d9-bf30-4b7e-a884-282bbdabb7e5"],
Cell[49246, 1517, 896, 24, 38, "Output",ExpressionUUID->"ee3aa393-cc61-49a0-830c-71d55644810d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50191, 1547, 83, 0, 69, "Chapter",ExpressionUUID->"4719c1c2-0fb2-49b7-af68-9526b6ac4c1f"],
Cell[50277, 1549, 244, 4, 35, "Text",ExpressionUUID->"b3a8f67e-e08c-4a48-b2ed-df525e590b97"],
Cell[CellGroupData[{
Cell[50546, 1557, 206, 4, 30, "Input",ExpressionUUID->"374de7a7-c425-461e-aadd-10a301ae1cd8"],
Cell[50755, 1563, 10343, 214, 83, "Output",ExpressionUUID->"1452cfd0-858c-4a21-b20f-680af57b6b53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61135, 1782, 182, 4, 30, "Input",ExpressionUUID->"d61cebd0-11c0-4e67-a844-31c694ac495a"],
Cell[61320, 1788, 952573, 18935, 3062, "Output",ExpressionUUID->"fb3f4dd8-7be3-44a5-9a78-d9202755afe6"]
}, Open  ]],
Cell[1013908, 20726, 166, 3, 35, "Text",ExpressionUUID->"a45b4b7a-85df-4e75-bbcf-7e2de032f9aa"],
Cell[1014077, 20731, 637, 15, 30, "Input",ExpressionUUID->"0427cc2e-9158-4a88-a38d-d02a32661edd"],
Cell[1014717, 20748, 236, 6, 35, "Text",ExpressionUUID->"9a0a3237-9ba7-47a5-855d-adaaa17b0915"],
Cell[CellGroupData[{
Cell[1014978, 20758, 572, 13, 30, "Input",ExpressionUUID->"4713518a-2240-4d23-9c45-b7530fd06464"],
Cell[1015553, 20773, 49003, 1169, 1929, "Output",ExpressionUUID->"5dba61b6-3b3f-4c03-8267-1934af7a380f"]
}, Open  ]],
Cell[1064571, 21945, 159, 3, 35, "Text",ExpressionUUID->"1af5b344-4424-4a5d-b0e0-d0386965bf3c"],
Cell[1064733, 21950, 263, 6, 30, "Input",ExpressionUUID->"0ea2791e-6d53-4825-bdf6-45080ed1cbe8"],
Cell[CellGroupData[{
Cell[1065021, 21960, 213, 4, 30, "Input",ExpressionUUID->"16c2cdbe-1c8f-4d71-8cda-c509c43530b2"],
Cell[1065237, 21966, 286, 7, 36, "Output",ExpressionUUID->"c171ccef-fa5c-4088-b4a4-2725f3b38631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065560, 21978, 212, 4, 30, "Input",ExpressionUUID->"55036209-def2-4ba5-9740-69b6c03e5ba5"],
Cell[1065775, 21984, 272, 6, 36, "Output",ExpressionUUID->"0ed970dc-e47d-400f-80fb-660bcd7a82f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066084, 21995, 371, 9, 30, "Input",ExpressionUUID->"55fc48a4-a908-40b5-8e09-9de60e23b4e5"],
Cell[1066458, 22006, 693, 18, 37, "Output",ExpressionUUID->"e5ca6b3f-a054-4beb-bbd9-465265c03f95"]
}, Open  ]],
Cell[1067166, 22027, 343, 7, 58, "Text",ExpressionUUID->"893df867-7fd1-498e-9ed8-486c16a16b43"],
Cell[1067512, 22036, 218, 5, 35, "Text",ExpressionUUID->"cd92dad1-eb8a-47c8-9dff-d30d05becf0a"],
Cell[1067733, 22043, 306, 7, 30, "Input",ExpressionUUID->"904ef541-6ab9-41c3-aded-d129b3b3622a"],
Cell[CellGroupData[{
Cell[1068064, 22054, 839, 18, 30, "Input",ExpressionUUID->"bdb84cbc-2515-40aa-ad32-0c7c1accfd68"],
Cell[1068906, 22074, 1190, 31, 34, "Output",ExpressionUUID->"1f81042e-b289-488a-80ac-4cefc68c1036"]
}, Open  ]],
Cell[1070111, 22108, 188, 3, 35, "Text",ExpressionUUID->"65d4f6c2-6626-4c14-9ff3-94d14b277397"],
Cell[1070302, 22113, 379, 8, 30, "Input",ExpressionUUID->"9e5621da-c900-4045-8f41-3f85572e06cb"],
Cell[CellGroupData[{
Cell[1070706, 22125, 790, 17, 30, "Input",ExpressionUUID->"f044267b-585f-4b12-ab5a-d06b00726d2b"],
Cell[1071499, 22144, 414, 9, 34, "Output",ExpressionUUID->"2d4f9da8-18a8-4efe-9686-c5250fa2c8a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

