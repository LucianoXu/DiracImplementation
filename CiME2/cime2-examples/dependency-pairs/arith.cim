%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                           %
%   BASE 3 ARITHMETIC                                                       %
%                                                                           %
%   Authors : Evelyne Contejean, Claude Marche'                             %
%                                                                           %
%                                                                           %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

operators
  +,* : AC
  0 : constant
  neg,zero,un,j : unary
  - : infix binary
  x,y,z : variable

order
  
  poly(2;
    [+](x,y)=x+y-2 ; 
    [*](x,y)=x.y-x-y+2 ; 
    [-](x,y)=x+y ; 
    [neg](x)=x ;
    [0]=2 ; 
    [zero](x)=x+1 ; 
    [j](x)=x+2 ; 
    [un](x)=x+2 ;
    [TOP(zero)](x)=x+1 ; 
    [TOP(neg)](x)=x+2;
    [TOP(+)](x,y)=x+y-1 ; 
    [TOP(-)](x,y)=x+y+2 ; 
    [TOP(*)](x,y)=x.y+2.x+2.y+2 
    ) 
 

problems

dp_termination (  

    zero(0) -> 0 ;
    x+0 -> x ;
    zero(x)+(zero(y)) -> zero(x+y) ;
    zero(x)+(un(y))   -> un(x+y) ;
    zero(x)+(j(y))    -> j(x+y) ;
    un(x)+j(y)        -> zero(x+y) ;
    x-y -> x+(neg(y)) ;

    neg(0)  -> 0 ;
    neg(zero(x))  -> zero(neg(x)) ;
    neg(un(x))    -> j(neg(x)) ;
    neg(j(x))     -> un(neg(x)) ;
    x*0 -> 0 ;
%
    x*0*z -> 0*z ;

    x*(zero(y)) -> zero(x*y) ;
%
    x*(zero(y))*z -> zero(x*y)*z ;

    x*(un(y))   -> x+(zero(x*y)) ;
%
    x*(un(y))*z -> (x+(zero(x*y)))*z ;

% regles a probleme
    (un(x))+(un(y)) -> j((x+y)+(un(0))) ;
    (j(x))+(j(y)) -> un((x+y)+(j(0))) ;
    x*(j(y)) -> (zero(x*y))+(neg(x)) ;
%
    x*(j(y))*z -> ((zero(x*y))+(neg(x)))*z 
);

 
end







