(*

  Claude Marché

  Sum and product of a list of integers

  Peano notation, + and * are associative

*)

[l, z, y, x]

+(x,0) -> x ;
+(0,x) -> x ;
+(s(x),s(y)) -> s(s(+(x,y))) ;
+(+(x,y),z) -> +(x,+(y,z)) ;
*(x,0) -> 0 ;
*(0,x) -> 0 ;
*(s(x),s(y)) -> s(+(*(x,y),+(x,y))) ;
*(*(x,y),z) -> *(x,*(y,z)) ;
sum(nil) -> 0 ;
sum(cons(x,l)) -> +(x,sum(l)) ;
prod(nil) -> s(0) ;
prod(cons(x,l)) -> *(x,prod(l)) ;


(*

let X = vars "x y z l b";

let F = signature "
  0   : constant ; 
  s : unary ;
  +,* : infix binary ;
  nil : constant ; 
  cons : 2 ;
  sum : unary ;
  prod : unary ;
";

let R = HTRS {} F X "
  x + 0 -> x;
  0 + x -> x;
  s(x) + s(y) -> s(s(x+y));
  (x+y)+z -> x+(y+z);
  x * 0 -> 0;
  0 * x -> 0;
  s(x) * s(y) -> s((x*y)+(x+y));
  (x*y)*z -> x*(y*z);
  sum(nil) -> 0;
  sum(cons(x,l)) -> x + sum(l);
  prod(nil) -> s(0);
  prod(cons(x,l)) -> x * prod(l);
  ";

termcrit "minimal";
polyinterpkind {("linear",1);("simple",1)};
h_termination R;
output_last_proof "";


*)
