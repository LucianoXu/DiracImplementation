(* Abelian free group generated by x and y. *)

let N = parameters "";

let S = pword_signature N "x ; 
			   X ;
			   y ;
			   Y ";

(* The classical naiv definition ...*)
let R = psrs S " X x -> ;
		 x X -> ;
		 Y y -> ;
		 y Y -> ;
                 x y -> y x;";

(* ...is not confluent *)

(* Let's add some rules "à la KB"*)

let R = psrs S " X x -> ;
		 x X -> ;
		 Y y -> ;
		 y Y -> ;
                 x y -> y x;
                 X y x -> y;
		 y x Y -> x;
		 x Y -> Y x;
		 X Y x -> Y;
		 X y -> y X;
		 X Y -> Y X";

pconfluent R; (* This is true. Let's check the standard test on strings: *)

let ws = word_signature " X Y x y ";
let r = SRS ws " X x -> ;
		 x X -> ;
		 Y y -> ;
		 y Y -> ;
                 x y -> y x;
                 X y x -> y;
		 y x Y -> x;
		 x Y -> Y x;
		 X Y x -> Y;
		 X y -> y X;
		 X Y -> Y X";

word_confluence r;
(* True again. *)
(* This structure is infinite. Is this the right one ?*)

#mem;




let Rcomplete = psrs S " X x -> ;
		 x X -> ;
		 Y y^{n} -> y^{n-1} | {n>0};
		 y Y -> ;
                 y x -> x y;
		 Y x -> x Y ;
	   
	         X y^{n} -> y^{n} X | {n>0};

		 Y X^{n} -> X^{n} Y | {n>0};

	         x y^{n} X -> y^{n} | {n>0};
		 y X^{n} Y -> X^{n} | {n>0}";

pconfluent Rcomplete; (* Is false *)

#mem;


let Rcomplete = psrs S " 
		 Y^{n} y^{q} -> Y^{n-q} |{n>q>0};
		 Y^{n} y^{q} -> y^{q-n} |{q>n>0};

		 X^{n} x^{q} -> X^{n-q} |{n>q>0};
		 X^{n} x^{q} -> x^{q-n} |{q>n>0};

	         x y^{n} X -> y^{n} | {n>0};
		 y X^{n} Y -> X^{n} | {n>0};
                 
		 y^{n} x^{p} -> x^{p} y^{n} | {n>0 /\ p>0};

		";

#time on;
pconfluent Rcomplete; (* Is ?? *)

#mem;
#quit;
