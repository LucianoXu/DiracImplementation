

let S = word_signature "0 1 h q0 q1 q2 q3 q4 q5 q6 q7 q8 q9";

let R = SRS S "

(* 

  Machine de Turing qui multiple

  on commence par 

  q0 1^n 0 1^m --->*  q6 1^n 0 1^{n+m}

  0 q0 : 0 > q0
  1 q0 : 0 > q1

  0 q1 : 0 > q2
  1 q1 : 1 > q1

  0 q2 : 1 < q3
  1 q2 : 1 > q2

  0 q3 : 0 < q4 
  1 q3 : 1 < q3

  0 q4 : 1 > q5
  1 q4 : 1 < q4
 
  0 q5 : 0 < q6
  1 q5 : 0 > q1
  
  0 q6 : STOP
  1 q6 : 1 < q6

 *)

      0 q0 0 -> 0 0 q0 ; 
      0 q0 1 -> 0 1 q0 ;
      1 q0 0 -> 0 0 q1 ; 
      1 q0 1 -> 0 1 q1 ;

      1 q1 0 -> 1 0 q1 ; 
      1 q1 1 -> 1 1 q1 ;
      0 q1 0 -> 0 0 q2 ; 
      0 q1 1 -> 0 1 q2 ;

      1 q2 0 -> 1 0 q2  ; 
      1 q2 1 -> 1 1 q2 ;
      0 q2   -> q3 1 ; 

      1 q3   -> q3 1 ; 
      0 q3   -> q4 0 ; 

      1 q4   -> q4 1 ; 
      0 q4 0 -> 1 0 q5 ; 
      0 q4 1 -> 1 1 q5 ;

      1 q5 0 -> 0 0 q1 ; 
      1 q5 1 -> 0 1 q1 ;
      0 q5   -> q6 0 ;

      1 q6 -> q6 1 ;


(*

  puis on complete par

  q7 1^n 0 1^m 0 1^k --->*  1 q7 1^{n-1} 0 1^m 0 1^{k+m}

  que l'on itere

  0 q7 : STOP
  1 q7 : 0 > q8

  0 q8 : 0 ^ q0
  1 q8 : 1 > q8

  0 q6 : 0 < q9

  0 q9 : 1 > q7
  1 q9 : 1 < q9

*)

  
  1 q7 0 -> 0 0 q8  ; 
  1 q7 1 -> 0 1 q8  ;

  0 q8   -> 0 q0    ;
  1 q8 0 -> 1 0 q8  ;
  1 q8 1 -> 1 1 q8  ;

  0 q6   -> q9 0    ;
  
  0 q9 0 -> 1 0 q7  ;
  0 q9 1 -> 1 1 q7  ;
  1 q9   -> q9 1    ;

(*

  extension du ruban aux bords

*)
 
      h q0   -> h 0 q0 ; 
      q0 h   -> q0 0 h ; 
      h q1   -> h 0 q1 ; 
      q1 h   -> q1 0 h ; 
      h q2   -> h 0 q2 ; 
      q2 h   -> q2 0 h ; 
      h q3   -> h 0 q3 ; 
      q3 h   -> q3 0 h ; 
      h q4   -> h 0 q4 ; 
      q4 h   -> q4 0 h ; 
      h q5   -> h 0 q5 ; 
      q5 h   -> q5 0 h ; 
      h q6   -> h 0 q6 ; 
      q6 h   -> q6 0 h ; 

    ";

(* 

  on doit alors avoir 

  h 1 q7 1^{n-1} 0 1^m h  --->* h 1^n 0 q7 1^m 0 1^{nm} 0 h

*)

let fun test s = word_normalize R (word S s);

#time on;
test "h 1 q7 1 0 1 1 1 0 h" ; 
test "h 1 q7 1 1 0 1 1 1 1 h" ; 
test "h 1 q7 1 1 1 1 0 1 1 1 1 1 h" ; 
test "h 1 q7 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 h" ;   (* 7*8 = 56 *)
test "h 1 q7 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 h" ;   (* 10*10 = 100 *)

test "h 1 q7 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 h" ;   (* 35*43 = 1505 *)

test "h 1 q7 1^246 0 1 ^ 487 h" ;   (* 247*487 = BIG ! *)




