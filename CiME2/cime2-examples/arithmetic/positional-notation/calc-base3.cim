%
%            Entiers relatifs, systeme confluent avec 
%            - addition
%            - soustraction, oppose
%            - multiplication
%            - pgcd
%

operators
%variables
  x,y,z,u,v,w : variable
%constructeurs
  0 : constant
  1_z,j_z,0_z : postfix unary
axioms
  (0)0_z = 0;

operators
%operateurs
  +_z  : AC
  - : infix binary
  opp : unary
 
axioms

  x +_z  0 = x;
  (x)0_z +_z (y)0_z = (x +_z y)0_z;
  (x)0_z +_z (y)1_z = (x +_z y)1_z;
  (x)0_z +_z (y)j_z = (x +_z y)j_z;

  (x)1_z +_z (y)1_z = (x +_z y +_z (0)1_z)j_z;
  (x)1_z +_z (y)j_z = (x +_z y)0_z;

  (x)j_z +_z (y)j_z = (x +_z y +_z (0)j_z)1_z;

  opp(0) = 0;
  opp((x)0_z) = (opp(x))0_z;
  opp((x)1_z) = (opp(x))j_z;
  opp((x)j_z) = (opp(x))1_z;
  x - y = x +_z opp(y);


operators
  *_z  : AC

axioms
  x *_z 0 = 0;
  x *_z (y)0_z = (x *_z y)0_z;
  x *_z (y)1_z = x +_z (x *_z y)0_z;
  x *_z (y)j_z = (x *_z y)0_z +_z opp(x);


order
lexico(
  poly(
[0] = 2 ;
[0_z](x) = x +  1;
[1_z](x) = x + 1;
[j_z](x) = x + 1;
[+_z](x,y) = x + y - 2;
[opp](x) = x;
[-](x,y) = x + y;
[*_z ](x,y) = x.y - x - y + 2
);
  poly(
[0] = 2 ;
[0_z](x) = x;
[1_z](x) = x + 1;
[j_z](x) = x + 1;
[+_z](x,y) = x + y - 2;
[opp](x) = x;
[*_z ](x,y) = x.y
);
  poly(
[0] = 2 ;
[0_z](x) = x + 1;
[1_z](x) = x + 1;
[j_z](x) = x + 1;
[+_z](x,y) = x + y - 2;
[opp](x) = 2.x;
[*_z ](x,y) = x.y
);
interactive)

operators 
  calc : unary
  1,2,3,4,5,6,7,8,9 : constant
  . : infix binary

axioms

  calc(0) = 0 ;
  calc(1) = (0)1_z ;
  calc(2) = ((0)1_z)j_z ;
  calc(3) = ((0)1_z)0_z ;
  calc(4) = ((0)1_z)1_z ;
  calc(5) = (((0)1_z)j_z)j_z ;
  calc(6) = (((0)1_z)j_z)0_z ;
  calc(7) = (((0)1_z)j_z)1_z ;
  calc(8) = (((0)1_z)0_z)j_z ;
  calc(9) = (((0)1_z)0_z)0_z ;
  calc(x.y) = (calc(x) *_z (((0)1_z)0_z)1_z) +_z calc(y) ;

problems
  reduce calc(3.0);
  reduce calc(7.5);
  reduce calc(5.1);
  reduce opp(calc(3.2));
  reduce calc(2.7);
  reduce opp(calc(1.0));

end
