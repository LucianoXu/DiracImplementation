%
%            Entiers relatifs, systeme confluent avec 
%            - addition
%            - soustraction, oppose
%            - multiplication
%            - pgcd
%

operators
%variables
  x,y,z,u,v,w : variable
%constructeurs
  0 : constant
  1_Z,j_Z,0_Z : postfix unary
axioms
  (0)0_Z = 0;

operators
%operateurs
  +_Z  : AC
  - : infix binary
  opp : unary
 
axioms

  x +_Z  0 = x;
  (x)0_Z +_Z (y)0_Z = (x +_Z y)0_Z;
  (x)0_Z +_Z (y)1_Z = (x +_Z y)1_Z;
  (x)0_Z +_Z (y)j_Z = (x +_Z y)j_Z;

  (x)1_Z +_Z (y)1_Z = (x +_Z y +_Z (0)1_Z)j_Z;
  (x)1_Z +_Z (y)j_Z = (x +_Z y)0_Z;

  (x)j_Z +_Z (y)j_Z = (x +_Z y +_Z (0)j_Z)1_Z;

  opp(0) = 0;
  opp((x)0_Z) = (opp(x))0_Z;
  opp((x)1_Z) = (opp(x))j_Z;
  opp((x)j_Z) = (opp(x))1_Z;
  x - y = x +_Z opp(y);


operators
  *_Z  : AC

axioms
  x *_Z 0 = 0;
  x *_Z (y)0_Z = (x *_Z y)0_Z;
  x *_Z (y)1_Z = x +_Z (x *_Z y)0_Z;
  x *_Z (y)j_Z = (x *_Z y)0_Z +_Z opp(x);


order
lexico(
  poly( 2;
[0] = 2 ;
[0_Z](x) = x +  1;
[1_Z](x) = x + 1;
[j_Z](x) = x + 1;
[+_Z](x,y) = x + y - 2;
[opp](x) = x;
[-](x,y) = x + y;
[*_Z ](x,y) = x.y - x - y + 2
);
  poly( 2;
[0] = 2 ;
[0_Z](x) = x;
[1_Z](x) = x + 1;
[j_Z](x) = x + 1;
[+_Z](x,y) = x + y - 2;
[opp](x) = x;
[*_Z ](x,y) = x.y
);
  poly( 2;
[0] = 2 ;
[0_Z](x) = x + 1;
[1_Z](x) = x + 1;
[j_Z](x) = x + 1;
[+_Z](x,y) = x + y - 2;
[opp](x) = 2.x;
[*_Z ](x,y) = x.y
);
interactive)

problems

  reduce (((((((((((((((((((((((((((((((((((((((((((0)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z) *_Z (((((((((((((((((((((((((((((((((((((((((0)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z)1_Z) ;
end


Welcome to CiME v1.14 - SunOS-5.4 - CSL opt - 12/04/96 15:09:44


=====    Compare 'x +_Z 0' and 'x' : >
New rule produced :  [1] opp(0) -> 0
New rule produced :  [2] (0)0_Z -> 0
New rule produced :  [3] x +_Z 0 -> x
New rule produced :  [4] x *_Z 0 -> 0
New rule produced :  [5] x - y -> x +_Z opp(y)
New rule produced :  [6] opp((x)0_Z) -> (opp(x))0_Z
New rule produced :  [7] opp((x)1_Z) -> (opp(x))j_Z
New rule produced :  [8] opp((x)j_Z) -> (opp(x))1_Z
New rule produced :  [9] x *_Z (y)0_Z -> (x *_Z y)0_Z
New rule produced :  [10] (x)0_Z +_Z (y)0_Z -> (x +_Z y)0_Z
New rule produced :  [11] (x)1_Z +_Z (y)0_Z -> (x +_Z y)1_Z
New rule produced :  [12] (x)j_Z +_Z (y)0_Z -> (x +_Z y)j_Z
New rule produced :  [13] (x)1_Z +_Z (y)j_Z -> (x +_Z y)0_Z
New rule produced :  [14] x *_Z (y)1_Z -> x +_Z (x *_Z y)0_Z
New rule produced :  [15] x *_Z (y)j_Z -> (x *_Z y)0_Z +_Z opp(x)
=====    Compare '(x)1_Z +_Z (y)1_Z' and '(x +_Z y +_Z (0)1_Z)j_Z' : >
=====    Compare '(x)j_Z +_Z (y)j_Z' and '(x +_Z y +_Z (0)j_Z)1_Z' : >
New rule produced :  [16] (x)1_Z +_Z (y)1_Z -> (x +_Z y +_Z (0)1_Z)j_Z
New rule produced :  [17] (x)j_Z +_Z (y)j_Z -> (x +_Z y +_Z (0)j_Z)1_Z

Result:
{ [1] opp(0) -> 0,
  [2] (0)0_Z -> 0,
  [3] x +_Z 0 -> x,
  [4] x *_Z 0 -> 0,
  [5] x - y -> x +_Z opp(y),
  [6] opp((x)0_Z) -> (opp(x))0_Z,
  [7] opp((x)1_Z) -> (opp(x))j_Z,
  [8] opp((x)j_Z) -> (opp(x))1_Z,
  [9] x *_Z (y)0_Z -> (x *_Z y)0_Z,
  [10] (x)0_Z +_Z (y)0_Z -> (x +_Z y)0_Z,
  [11] (x)1_Z +_Z (y)0_Z -> (x +_Z y)1_Z,
  [12] (x)j_Z +_Z (y)0_Z -> (x +_Z y)j_Z,
  [13] (x)1_Z +_Z (y)j_Z -> (x +_Z y)0_Z,
  [14] x *_Z (y)1_Z -> x +_Z (x *_Z y)0_Z,
  [15] x *_Z (y)j_Z -> (x *_Z y)0_Z +_Z opp(x),
  [16] (x)1_Z +_Z (y)1_Z -> (x +_Z y +_Z (0)1_Z)j_Z,
  [17] (x)j_Z +_Z (y)j_Z -> (x +_Z y +_Z (0)j_Z)1_Z } (17 rules)

Number of calls to AC matching      : 7060
Number of successful calls          : 274 (3%)
Number of calls to unification      : 119
Number of unifiers generated        : 173 (1.45 average)
Number of critical pairs considered : 110 (63%)
Number of rules produced            : 17
Number of rules retained            : 17

      times       |   user   |  system  |  total 
------------------+----------+----------+----------
Total times       |    6.290 |    2.610 |    8.900 
Unification times |    0.500 |    0.000 |    0.500 
Matching times    |    3.950 |    1.190 |    5.140 
Poly times        |    0.050 |    0.000 |    0.050 
