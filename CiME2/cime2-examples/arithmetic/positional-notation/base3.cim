
% structure

operators

  0 : constant
  s,p,t : unary

axioms

 t(0) = 0 ;

% addition

operators 

  + : AC
  x,y,z : variable

axioms

  0 + x = x ;
  t(x) + t(y) = t(x+y) ;
  t(x) + s(y) = s(x+y) ;
  t(x) + p(y) = p(x+y) ;
  s(x) + s(y) = p(x+y+s(0)) ;
  p(x) + p(y) = s(x+y+p(0)) ;
  s(x) + p(y) = t(x+y) ;

% opposite and minus

operators

  - : infix binary
  opp : unary

axioms

  opp(0) = 0 ;
  opp(t(x)) = t(opp(x)) ;
  opp(s(x)) = p(opp(x)) ;
  opp(p(x)) = s(opp(x)) ;
  x - y = x + opp(y) ;
%  x + opp(x) = 0 ;
%  opp(opp(x)) = x ;
%  opp(x+y) = opp(x)+opp(y) ;

% multiplication

operators

  * : AC

axioms

  x * 0 = 0 ;
  x * t(y) = t(x*y) ;
  x * s(y) = t(x*y) + x ;
  x * p(y) = t(x*y) + opp(x) ;

%  x*(y+z) = (x*y)+(x*z) ;
%  x*opp(y) = opp(x*y) ;

% examples

problems

% -7 * 8 
% -7 = 3*(-2)-1 = p(-2) = p(s(-1)) = p(s(p(0)))
%  8 = 3*3-1 = p(3) = p(t(1)) = p(t(s(0))) 

  reduce p(s(p(0))) * p(t(s(0))) ;

% resultat : s(p(t(s(p(0))))) = 3*(3*(3*(3*(3*0-1)+1))-1)+1 
%            = 3*(3*(3*(3*(-1)+1))-1)+1
%            = 3*(3*(3*(-2))-1)+1
%            = 3*(3*(-6)-1)+1
%            = 3*(-19)+1
%            = -56

end
