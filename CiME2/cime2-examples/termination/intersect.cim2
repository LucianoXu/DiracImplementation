let F = signature "
  true,false : constant ; if : 3 ;

  0 : constant ;
  s : unary ;
  eq : prefix commutative ;

  empty : constant ;
  singl : unary ;
  union : AC ;

  inter : AC ;
";

let X = vars "x y z";

let R = TRS F X "
     if(true,x,y) -> x ;
     if(false,x,y) -> y ;
     eq(0,0) -> true ;
     eq(0,s(x)) -> false ;
     eq(s(x),s(y)) -> eq(x,y) ;

     empty union x -> x ;

     x inter empty -> empty ;
     x inter (y union z) -> (x inter y) union (x inter z) ;
     singl(x) inter singl(y) -> if(eq(x,y),singl(x),empty) ;
";

polyinterpkind { ("linear",1) ; ("simple";2) };

#time on;
termination R;
#time off;

termcrit "dp";

#time on;
termination R;
#time off;

termcrit "nomarks";

#time on;
termination R;
#time off;

termcrit "nograph";

#time on;
termination R;
#time off;



#quit;

     


  
