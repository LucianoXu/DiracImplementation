
let F = signature "
nil, niltree : constant;
flat_in, flat_out, right_in, right_out, u'1 : unary;
cons, u1, u2 : binary;
tree : 3;
";

let X = vars "x xs1 xs2 xs zs ys y ys1 ys2";

let R = TRS F X "
right_in(tree(x, xs1, xs2)) -> right_out(xs2);
flat_in(niltree) -> flat_out(nil);
flat_in(tree(x, niltree, xs)) -> u1(right_in(tree(x, niltree, xs)), x);
u1(right_out(zs), x) -> u2(flat_in(zs), x);
u2(flat_out(ys), x) -> flat_out(cons(x, ys));
flat_in(tree(x, tree(y, ys1, ys2), xs)) -> u'1(flat_in(tree(y, ys1, tree(x, ys2, xs))));
u'1(flat_out(zs)) -> flat_out(zs);
";

termcrit "dp";
termpolybound 2;
#verbose 1;
#time on;
termination R;
