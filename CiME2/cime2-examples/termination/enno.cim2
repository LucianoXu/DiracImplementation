let F = signature "
0     : constant;
s     : unary;
empty : constant;
cons  : infix binary;
qsort_in, qsort_out : unary;
split_in, split_out : binary;
append_in  : binary;
append_out : unary; 
less_in  : binary;
less_out : constant;
geq_in  : binary;
geq_out : constant;
u11 : 3;
u12 : 5;
u13 : 6;
u14 : 7;
u21,u22 : 4;
u31,u32 : 4;
u41 : 4;
u51 : 3;
u61 : 3;
";

let X = vars "x y z x0 x1 x9 x8 x7";

let R = TRS F X "
qsort_in(empty)    -> qsort_out(empty);
qsort_in(x cons y) -> u11(split_in(y,x),x,y);
u11(split_out(x9,x8),x,y)       -> u12(qsort_in(x9),x,y,x9,x8);
u12(qsort_out(z),x,y,x9,x8)     -> u13(qsort_in(x8),x,y,x9,x8,z);
u13(qsort_out(x7),x,y,x9,x8,z)  -> u14(append_in(z,x cons x7),x,y,x9,x8,z,x7);
u14(append_out(x0),x,y,x9,x8,z,x1)-> qsort_out(x0) ;
split_in(empty,y)    -> split_out(empty,empty);
split_in(x cons z,y) -> u21(less_in(x,y),x,y,z);
u21(less_out,x,y,z)         -> u22(split_in(z,y),x,y,z);
u22(split_out(x9,x8),x,y,z) -> split_out(x cons x9,x8);
split_in(x cons z,y) -> u31(geq_in(x,y),x,y,z);
u31(geq_out,x,y,z)          -> u32(split_in(z,y),x,y,z);
u32(split_out(x9,x8),x,y,z) -> split_out(x9,x cons x8);
append_in(empty,x)      -> append_out(x);
append_in(x cons x9,x8) -> u41(append_in(x9,x8),x,x9,x8);
u41(append_out(z),x,x9,x8) -> append_out(x cons z);
less_in(0,s(x))    -> less_out;
less_in(s(x),s(y)) -> u51(less_in(x,y),x,y);
u51(less_out,x,y) -> less_out;
geq_in(x,x)        -> geq_out;
geq_in(s(x),0)     -> geq_out;
geq_in(s(x),s(y))  -> u61(geq_in(x,y),x,y);    
u61(geq_out,x,y) -> geq_out;
";

termcrit "dp";
#verbose 4;
#time;
termpolybound 2;
termination R;



