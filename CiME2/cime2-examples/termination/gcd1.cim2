

let F = signature "
true, false : constant ;
0 : constant ;
s,p : unary ;
- : infix binary;
ge,gcd : binary ;
ifgcd : 3;
";

let X = vars "x y z";

let R = TRS F X "
p(0) -> 0;
p(s(x)) -> x;

x-0 -> x;
x-s(y) -> p(x-y);

ge(x,0) -> true;
ge(0,s(y)) -> false;
ge(s(x),s(y)) -> ge(x,y);

gcd(x,0) -> x;
gcd(0,y) -> y;
gcd(s(x),s(y)) -> ifgcd(ge(x,y),s(x),s(y)) ;
ifgcd(true,s(x),s(y)) -> gcd(x-y,s(y));
ifgcd(false,s(x),s(y)) -> gcd(s(x),y-x);
";

normalize R (term F X "gcd(s(s(s(s(s(s(0)))))), s(s(s(s(0)))))");

termcrit "dp";

termcrit "marks";

termcrit "nograph";

termpolybound 1;

termination R;

(* polyinterpkind "linear";
*)

termcrit "graph";

termcrit "nomarks";

termpolybound 6;

termination R;

let R2 = TRS F X "
p(0) -> 0;
p(s(x)) -> x;

x-0 -> x;
x-s(y) -> p(x-y);

ge(x,0) -> true;
ge(0,s(y)) -> false;
ge(s(x),s(y)) -> ge(x,y);

gcd(x,0) -> x;
gcd(0,y) -> y;
gcd(s(x),s(y)) -> ifgcd(ge(x,y),s(x),s(y)) ;
ifgcd(true,x,y) -> gcd(x-y,y);
ifgcd(false,x,y) -> gcd(x,y-x);
";



