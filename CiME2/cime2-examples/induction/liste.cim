operators

% entiers
  0 : constant
  s : unary
  + : infix binary
  x,y : variable

% listes
  nil : constant
  L : unary   % longueur de la liste
  . : infix binary
  rev : unary  % renvoie la liste inversee
  l1,l2 : variable
  @ : infix binary

axioms
  x+0 = x;
  x+s(y) = s(x+y);
  nil@l1 = l1;
  (x.l1)@l2 = x.(l1@l2);
  L(nil) = 0;
  L(x.l1) = s(L(l1));
  rev(nil) = nil;
  rev(x.l1) = (rev(l1)@(x.nil));

order rpo( L>+>s>0 ,
           rev>@>.>nil; @ lrlex, + lrlex)

inductive
  l1@nil = l1;
%  rev(l1@l2) = (rev(l1))@(rev(l2));
%  rev(rev(x)) = x ;
%  L(l1@l2) = (L(l1))+(L(l2)) ;
%  L(rev(l1)) = L(l1) ;

end
